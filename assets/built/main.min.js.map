{"version":3,"sources":["colors.js","gtu.js","subscribe.js","elasticlunr.js","main.js"],"names":["_color","value","trim","charAt","substring","red","parseInt","green","blue","rgba","a","mix","color_1","color_2","weight","h2d","h","color","i","v1","substr","v2","val","Math","floor","toString","length","tint","shade","opaque","background","foreground","opacity","Selection","selectors","this","elements","document","querySelectorAll","prototype","each","fn","forEach","addClass","classes","element","classList","add","removeClass","className","on","type","listener","useCapture","addEventListener","click","window","gtu","ready","readyState","setTimeout","getParameterByName","name","url","location","href","replace","results","RegExp","exec","decodeURIComponent","action","success","elasticlunr","config","idx","Index","pipeline","trimmer","stopWordFilter","stemmer","call","global","step2list","step3list","re_mgr0","re_mgr1","re_meq1","re_s_v","re_1a","re2_1a","re_1b","re2_1b","re_1b_2","re2_1b_2","re3_1b_2","re4_1b_2","re_1c","re_2","re_3","re_4","re2_4","re_5","re_5_1","re3_5","root","factory","version","lunr","utils","warn","message","console","obj","EventEmitter","events","addListener","args","Array","slice","arguments","pop","names","TypeError","hasHandler","push","removeListener","fnIndex","indexOf","splice","emit","apply","undefined","tokenizer","str","isArray","arr","filter","token","map","t","toLowerCase","out","item","tokens","split","seperator","concat","defaultSeperator","setSeperator","sep","resetSeperator","getSeperator","Pipeline","_queue","registeredFunctions","registerFunction","label","getRegisteredFunction","warnIfFunctionNotRegistered","load","serialised","fnName","Error","after","existingFn","newFn","pos","before","remove","run","tokenLength","pipelineLength","j","reset","get","toJSON","_fields","_ref","documentStore","DocumentStore","index","eventEmitter","_idfCache","bind","off","serialisedData","field","fields","ref","InvertedIndex","addField","fieldName","setRef","refName","saveDocument","save","addDoc","doc","emitEvent","docRef","fieldTokens","addFieldLength","tokenCount","termFrequency","sqrt","addToken","tf","removeDocByRef","isDocStored","hasDoc","getDoc","removeDoc","removeToken","updateDoc","idf","term","cacheKey","Object","hasOwnProperty","df","getDocFreq","log","getFields","search","query","userConfig","configStr","JSON","stringify","Configuration","queryTokens","queryResults","fieldSearchResults","fieldSearch","fieldBoost","boost","score","sort","b","booleanType","bool","expand","scores","docTokens","expandToken","queryTokenScores","key","docs","getDocs","filteredDocs","fieldSearchStats","getTermFrequency","fieldLength","getFieldLength","fieldLengthNorm","penality","mergeScores","coordNorm","accumScores","op","intersection","n","indexJson","use","plugin","unshift","_save","docInfo","store","attr","copy","constructor","clone","updateFieldLength","ational","tional","enci","anci","izer","bli","alli","entli","eli","ousli","ization","ation","ator","alism","iveness","fulness","ousness","aliti","iviti","biliti","logi","icate","ative","alize","iciti","ical","ful","ness","v","C","c","w","suffix","firstch","re3","re4","re","stem","re2","fp","toUpperCase","test","stopWords","clearStopWords","addStopWords","words","word","resetStopWords","defaultStopWords","","able","about","across","all","almost","also","am","among","an","and","any","are","as","at","be","because","been","but","by","can","cannot","could","dear","did","do","does","either","else","ever","every","for","from","got","had","has","have","he","her","hers","him","his","how","however","if","in","into","is","it","its","just","least","let","like","likely","may","me","might","most","must","my","neither","no","nor","not","of","often","only","or","other","our","own","rather","said","say","says","she","should","since","so","some","than","that","the","their","them","then","there","these","they","tis","to","too","twas","us","wants","was","we","were","what","when","where","which","while","who","whom","why","will","with","would","yet","you","your","tokenInfo","hasToken","node","getNode","memo","parse","buildUserConfig","error","buildDefaultConfig","field_config","field_expand","global_bool","global_expand","addAllFields2UserConfig","SortedSet","set","locationFor","toArray","ctx","elem","start","end","sectionLength","pivot","pivotElem","intersect","otherSet","intersectSet","a_len","b_len","union","longSet","shortSet","unionSet","shortSetElements","define","amd","exports","module","_luminanceList","luminance","rgb","r","g","entries","toFixed","contrastRatio","options","colorContrastLight","l1","l2","colorContrast","colorContrastDark","minContrastRatio","maxRatio","maxRatioColor","ratio","searchInput","searchButton","searchResult","indexDump","update","data","posts","post","localStorage","setItem","updated_at","gh_search_key","gh_search_migration","siteUrl","getItem","removeItem","fetch","e","result","target","output","title","excerpt","html","preventDefault","event","contains","focus","keyup","keyCode","addStyleElement","css","style","createElement","styleSheet","cssText","appendChild","createTextNode","getElementsByTagName","squashCss","gradientBackground","enableGradients","btnBoxShadow","enableShadows","focusBoxShadow","shadow","border","btnFocusWidth","removeGradientIfEnabled","buttonVariant","btnHoverBgShadeAmount","btnHoverBgTintAmount","btnHoverBorderShadeAmount","btnHoverBorderTintAmount","btnActiveBgShadeAmount","btnActiveBgTintAmount","btnActiveBorderShadeAmount","btnActiveBorderTintAmount","btnActiveBoxShadow","hoverBackground","hoverBorder","hoverColor","activeBackground","activeBorder","activeColor","disabledBackground","disabledBorder","disabledColor","activeBoxShadow","buttons","accentColor","getComputedStyle","querySelector","getPropertyValue","forms","formElements","locationInputElement","formElement","hiddenInputElement","setAttribute"],"mappings":"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EACAC,IAAA,EACAC,OAAA,EACAC,IAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,SAAA,EACAC,MAAA,EACAC,KAAA,EACAC,IAAA,EACAC,KAAA,EACAC,QAAA,EACAC,OAAA,EACAC,MAAA,EACAC,KAAA,EACAC,IAAA,EACAC,MAAA,EACAC,QAAA,EACAC,MAAA,EACAC,MAAA,EACAC,OAAA,EACAC,KAAA,EACAC,MAAA,EACArL,KAAA,EACAsL,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,MAAA,EACAC,IAAA,EACAC,KAAA,EACAC,MAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,SAAA,EACA7V,GAAA,EACA8V,IAAA,EACAC,IAAA,EACAC,MAAA,EACAC,IAAA,EACAC,IAAA,EACAC,KAAA,EACAC,MAAA,EACAC,OAAA,EACAC,KAAA,EACAC,MAAA,EACAC,QAAA,EACAC,KAAA,EACAC,IAAA,EACAC,OAAA,EACAC,MAAA,EACAC,MAAA,EACAC,IAAA,EACAC,SAAA,EACAC,IAAA,EACAC,KAAA,EACAC,KAAA,EACAC,IAAA,EACA5M,KAAA,EACA6M,OAAA,EACApV,IAAA,EACAqV,MAAA,EACAC,IAAA,EACAC,OAAA,EACAC,KAAA,EACAC,KAAA,EACAC,QAAA,EACAC,MAAA,EACAC,KAAA,EACAC,MAAA,EACAC,KAAA,EACAC,QAAA,EACAC,OAAA,EACAC,IAAA,EACAC,MAAA,EACAC,MAAA,EACAC,MAAA,EACAC,KAAA,EACAC,OAAA,EACAC,MAAA,EACAC,MAAA,EACAC,OAAA,EACAC,OAAA,EACAC,MAAA,EACA1X,MAAA,EACA2X,KAAA,EACAC,IAAA,EACAC,KAAA,EACAC,MAAA,EACAC,IAAA,EACAC,OAAA,EACAC,KAAA,EACAC,IAAA,EACAC,MAAA,EACAC,MAAA,EACAC,MAAA,EACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,KAAA,EACAC,MAAA,EACAC,KAAA,EACAC,MAAA,EACAC,MAAA,EACAC,OAAA,EA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","file":"main.min.js","sourcesContent":["function _color(value) {\n    value = value.trim();\n    if (value.charAt(0) === '#') {\n        return value.substring(1);\n    }\n    return value;\n}\n\nfunction red(value) {\n    return parseInt(_color(value).substring(0, 2), 16);\n}\n\nfunction green(value) {\n    return parseInt(_color(value).substring(2, 4), 16);\n}\n\nfunction blue(value) {\n    return parseInt(_color(value).substring(4, 6), 16);\n}\n\nfunction rgba(value, a) {\n    a = a * 100;\n    return `rgb(${ red(value) } ${ green(value) } ${ blue(value) } / ${ a }%)`;\n}\n\nfunction mix(color_1, color_2, weight) {\n    color_1 = _color(color_1);\n    color_2 = _color(color_2);\n\n    function d2h(d) {\n        return d.toString(16);\n    }  // convert a decimal value to hex\n    function h2d(h) {\n        return parseInt(h, 16);\n    } // convert a hex value to decimal\n\n    weight = (typeof (weight) !== 'undefined') ? weight : 50; // set the weight to 50%, if that argument is omitted\n\n    var color = \"#\";\n\n    for (var i = 0; i <= 5; i += 2) { // loop through each of the 3 hex pairs—red, green, and blue\n        var v1 = h2d(color_1.substr(i, 2)), // extract the current pairs\n            v2 = h2d(color_2.substr(i, 2)),\n\n            // combine the current pairs from each source color, according to the specified weight\n            val = d2h(Math.floor(v2 + (v1 - v2) * (weight / 100.0)));\n        while (val.length < 2) {\n            val = '0' + val;\n        } // prepend a '0' if val results in a single digit\n\n        color += val; // concatenate val to our new color string\n    }\n\n    return color;\n}\n\n// Tint a color: mix a color with white\nfunction tint(color, weight) {\n    return mix('ffffff', color, weight);\n}\n\n// Shade a color: mix a color with black\nfunction shade(color, weight) {\n    return mix('000000', color, weight);\n}\n\n// Return opaque color\n// opaque(#fff, rgba(0, 0, 0, .5)) => #808080\nfunction opaque(background, foreground) {\n    // mix(rgba($foreground, 1), $background, opacity($foreground) * 100);\n    return mix(foreground, background, opacity(foreground) * 100);\n}\n\n// A list of pre-calculated numbers of pow(($value / 255 + .055) / 1.055, 2.4). (from 0 to 255)\n// stylelint-disable-next-line scss/dollar-variable-default, scss/dollar-variable-pattern\nconst _luminanceList = [\n    .0008, .0010, .0011, .0013, .0015, .0017, .0020, .0022, .0025, .0027, .0030, .0033, .0037, .0040, .0044, .0048,\n    .0052, .0056, .0060, .0065, .0070, .0075, .0080, .0086, .0091, .0097, .0103, .0110, .0116, .0123, .0130, .0137,\n    .0144, .0152, .0160, .0168, .0176, .0185, .0194, .0203, .0212, .0222, .0232, .0242, .0252, .0262, .0273, .0284,\n    .0296, .0307, .0319, .0331, .0343, .0356, .0369, .0382, .0395, .0409, .0423, .0437, .0452, .0467, .0482, .0497,\n    .0513, .0529, .0545, .0561, .0578, .0595, .0612, .0630, .0648, .0666, .0685, .0704, .0723, .0742, .0762, .0782,\n    .0802, .0823, .0844, .0865, .0887, .0908, .0931, .0953, .0976, .0999, .1022, .1046, .1070, .1095, .1119, .1144,\n    .1170, .1195, .1221, .1248, .1274, .1301, .1329, .1356, .1384, .1413, .1441, .1470, .1500, .1529, .1559, .1590,\n    .1620, .1651, .1683, .1714, .1746, .1779, .1812, .1845, .1878, .1912, .1946, .1981, .2016, .2051, .2086, .2122,\n    .2159, .2195, .2232, .2270, .2307, .2346, .2384, .2423, .2462, .2502, .2542, .2582, .2623, .2664, .2705, .2747,\n    .2789, .2831, .2874, .2918, .2961, .3005, .3050, .3095, .3140, .3185, .3231, .3278, .3325, .3372, .3419, .3467,\n    .3515, .3564, .3613, .3663, .3712, .3763, .3813, .3864, .3916, .3968, .4020, .4072, .4125, .4179, .4233, .4287,\n    .4342, .4397, .4452, .4508, .4564, .4621, .4678, .4735, .4793, .4851, .4910, .4969, .5029, .5089, .5149, .5210,\n    .5271, .5333, .5395, .5457, .5520, .5583, .5647, .5711, .5776, .5841, .5906, .5972, .6038, .6105, .6172, .6240,\n    .6308, .6376, .6445, .6514, .6584, .6654, .6724, .6795, .6867, .6939, .7011, .7084, .7157, .7231, .7305, .7379,\n    .7454, .7529, .7605, .7682, .7758, .7835, .7913, .7991, .8070, .8148, .8228, .8308, .8388, .8469, .8550, .8632,\n    .8714, .8796, .8879, .8963, .9047, .9131, .9216, .9301, .9387, .9473, .9560, .9647, .9734, .9823, .9911, 1\n];\n\n\n// Return WCAG2.0 relative luminance\n// See https://www.w3.org/WAI/GL/wiki/Relative_luminance\n// See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\nfunction luminance(color) {\n    let rgb = {\n        r: red(color),\n        g: green(color),\n        b: blue(color)\n    };\n\n    for (let [name, value] of Object.entries(rgb)) {\n        if (value / 255 < .03928) {\n            value = value / 255 / 12.92;\n        } else {\n            value = _luminanceList[value];\n        }\n        rgb[name] = value;\n    }\n\n    return +(rgb.r * .2126 + rgb.g * .7152 + rgb.b * .0722).toFixed(8);\n}\n\n\nfunction contrastRatio(background, options) {\n    options.colorContrastLight = options.colorContrastLight || '#ffffff';\n    options.foreground = options.foreground || options.colorContrastLight;\n\n    const l1 = luminance(background);\n\n    // If we don't allow opacity in the foreground color this will alway equal 'foreground'\n    // $l2: luminance(opaque($background, $foreground));\n    const l2 = luminance(options.foreground);\n\n    if (l1 > l2) {\n        return +((l1 + .05) / (l2 + .05)).toFixed(10);\n    }\n    return +((l2 + .05) / (l1 + .05)).toFixed(10);\n}\n\n// https://getbootstrap.com/docs/5.0/customize/sass/#color-contrast\nfunction colorContrast(background, options) {\n    options = options || {};\n    options.colorContrastDark = options.colorContrastDark || '#000000';\n    options.colorContrastLight = options.colorContrastLight || '#ffffff';\n    options.minContrastRatio = options.minContrastRatio || 4.5;\n\n    const foregrounds = [options.colorContrastLight, options.colorContrastDark, '#ffffff', '#000000'];\n    let maxRatio = 0;\n    let maxRatioColor = null;\n\n    for (const color of foregrounds) {\n        let ratio = contrastRatio(background, {\n            foreground: color,\n            colorContrastLight: options.colorContrastLight,\n            colorContrastDark: options.colorContrastDark\n        });\n        if (ratio > options.minContrastRatio) {\n            return color;\n        } else if (ratio > maxRatio) {\n            maxRatio = ratio;\n            maxRatioColor = color;\n        }\n    }\n\n    console.log(`Found no color leading to ${options.minContrastRatio}:1 contrast ratio against ${background}...`);\n    return maxRatioColor;\n}\n","'use: strict';\n/**\n * Simple replacements for jQuery functions + utilities\n * Compatibility: IE9+, Safari, Chrome, FF, Edge\n */\n(function () {\n    function Selection(selectors) {\n        this.elements = document.querySelectorAll(selectors);\n        return this;\n    }\n    Selection.prototype.each = function(fn) {\n        this.elements.forEach(fn);\n        return this;\n    }\n    Selection.prototype.addClass = function(classes) {\n        return this.each(function (element) {\n            element.classList.add(classes);\n        });\n    }\n    Selection.prototype.removeClass = function(classes) {\n        return this.each(function (element) {\n            if (!classes) {\n                element.className = '';\n            } else {\n                element.classList.add(classes);\n            }\n        });\n    }\n\n    Selection.prototype.val = function(value) {\n        return this.each(function (element) {\n            element.value = value;\n        });\n    }\n\n    Selection.prototype.on = function(type, listener, useCapture) {\n        return this.each(function (element) {\n            element.addEventListener(type, listener, useCapture);\n        });\n    }\n\n    Selection.prototype.click = function(listener, useCapture) {\n        return this.on('click', listener, useCapture);\n    }\n\n    window.gtu = function(selectors) {\n        return new Selection(selectors);\n    }\n\n    // https://stackoverflow.com/a/9899701/6849315\n    gtu.ready = function (fn) {\n        // see if DOM is already available\n        if (document.readyState === \"complete\" || document.readyState === \"interactive\") {\n            // call on next available tick\n            setTimeout(fn, 1);\n        } else {\n            document.addEventListener(\"DOMContentLoaded\", fn);\n        }\n    }\n\n    gtu.getParameterByName = function (name, url) {\n        if (!url) {\n            url = window.location.href;\n        }\n        name = name.replace(/[[\\]]/g, \"\\\\$&\");\n        var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n            results = regex.exec(url);\n        if (!results) {\n            return null;\n        }\n        if (!results[2]) {\n            return '';\n        }\n        return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n    }\n\n    gtu.addClass = function (selectors, classes) {\n        document.querySelectorAll(selectors).forEach(function (element) {\n            element.classList.add(classes);\n        });\n    }\n\n})();\n","gtu.ready(function () {\n    var action = gtu.getParameterByName('action');\n    var success = gtu.getParameterByName('success');\n\n    if (action === 'subscribe' && (success === null || success === 'true')) {\n        gtu('body').addClass('subscribe-success');\n    }\n    if (action === 'subscribe' && success === 'false') {\n        gtu('body').addClass('subscribe-failure');\n    }\n    gtu('.subscribe-notification .subscribe-close-button').click(function () {\n        gtu('.subscribe-notification').addClass('close');\n    });\n    // Reset form on opening subscription overlay\n    gtu('.subscribe-button').click(function () {\n        gtu('.subscribe-overlay form').removeClass();\n        gtu('.subscribe-email').val('');\n    });\n});\n","/**\n * elasticlunr - http://weixsong.github.io\n * Lightweight full-text search engine in Javascript for browser search and offline search. - 0.9.5\n *\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n * MIT Licensed\n * @license\n */\n\n(function(){\n\n/*!\n * elasticlunr.js\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n */\n\n/**\n * Convenience function for instantiating a new elasticlunr index and configuring it\n * with the default pipeline functions and the passed config function.\n *\n * When using this convenience function a new index will be created with the\n * following functions already in the pipeline:\n * \n * 1. elasticlunr.trimmer - trim non-word character\n * 2. elasticlunr.StopWordFilter - filters out any stop words before they enter the\n * index\n * 3. elasticlunr.stemmer - stems the tokens before entering the index.\n *\n *\n * Example:\n *\n *     var idx = elasticlunr(function () {\n *       this.addField('id');\n *       this.addField('title');\n *       this.addField('body');\n *       \n *       //this.setRef('id'); // default ref is 'id'\n *\n *       this.pipeline.add(function () {\n *         // some custom pipeline function\n *       });\n *     });\n * \n *    idx.addDoc({\n *      id: 1, \n *      title: 'Oracle released database 12g',\n *      body: 'Yestaday, Oracle has released their latest database, named 12g, more robust. this product will increase Oracle profit.'\n *    });\n * \n *    idx.addDoc({\n *      id: 2, \n *      title: 'Oracle released annual profit report',\n *      body: 'Yestaday, Oracle has released their annual profit report of 2015, total profit is 12.5 Billion.'\n *    });\n * \n *    # simple search\n *    idx.search('oracle database');\n * \n *    # search with query-time boosting\n *    idx.search('oracle database', {fields: {title: {boost: 2}, body: {boost: 1}}});\n *\n * @param {Function} config A function that will be called with the new instance\n * of the elasticlunr.Index as both its context and first parameter. It can be used to\n * customize the instance of new elasticlunr.Index.\n * @namespace\n * @module\n * @return {elasticlunr.Index}\n *\n */\nvar elasticlunr = function (config) {\n  var idx = new elasticlunr.Index;\n\n  idx.pipeline.add(\n    elasticlunr.trimmer,\n    elasticlunr.stopWordFilter,\n    elasticlunr.stemmer\n  );\n\n  if (config) config.call(idx, idx);\n\n  return idx;\n};\n\nelasticlunr.version = \"0.9.5\";\n\n// only used this to make elasticlunr.js compatible with lunr-languages\n// this is a trick to define a global alias of elasticlunr\nlunr = elasticlunr;\n\n/*!\n * elasticlunr.utils\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n */\n\n/**\n * A namespace containing utils for the rest of the elasticlunr library\n */\nelasticlunr.utils = {};\n\n/**\n * Print a warning message to the console.\n *\n * @param {String} message The message to be printed.\n * @memberOf Utils\n */\nelasticlunr.utils.warn = (function (global) {\n  return function (message) {\n    if (global.console && console.warn) {\n      console.warn(message);\n    }\n  };\n})(this);\n\n/**\n * Convert an object to string.\n *\n * In the case of `null` and `undefined` the function returns\n * an empty string, in all other cases the result of calling\n * `toString` on the passed object is returned.\n *\n * @param {object} obj The object to convert to a string.\n * @return {String} string representation of the passed object.\n * @memberOf Utils\n */\nelasticlunr.utils.toString = function (obj) {\n  if (obj === void 0 || obj === null) {\n    return \"\";\n  }\n\n  return obj.toString();\n};\n/*!\n * elasticlunr.EventEmitter\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n */\n\n/**\n * elasticlunr.EventEmitter is an event emitter for elasticlunr.\n * It manages adding and removing event handlers and triggering events and their handlers.\n *\n * Each event could has multiple corresponding functions,\n * these functions will be called as the sequence that they are added into the event.\n * \n * @constructor\n */\nelasticlunr.EventEmitter = function () {\n  this.events = {};\n};\n\n/**\n * Binds a handler function to a specific event(s).\n *\n * Can bind a single function to many different events in one call.\n *\n * @param {String} [eventName] The name(s) of events to bind this function to.\n * @param {Function} fn The function to call when an event is fired.\n * @memberOf EventEmitter\n */\nelasticlunr.EventEmitter.prototype.addListener = function () {\n  var args = Array.prototype.slice.call(arguments),\n      fn = args.pop(),\n      names = args;\n\n  if (typeof fn !== \"function\") throw new TypeError (\"last argument must be a function\");\n\n  names.forEach(function (name) {\n    if (!this.hasHandler(name)) this.events[name] = [];\n    this.events[name].push(fn);\n  }, this);\n};\n\n/**\n * Removes a handler function from a specific event.\n *\n * @param {String} eventName The name of the event to remove this function from.\n * @param {Function} fn The function to remove from an event.\n * @memberOf EventEmitter\n */\nelasticlunr.EventEmitter.prototype.removeListener = function (name, fn) {\n  if (!this.hasHandler(name)) return;\n\n  var fnIndex = this.events[name].indexOf(fn);\n  if (fnIndex === -1) return;\n\n  this.events[name].splice(fnIndex, 1);\n\n  if (this.events[name].length == 0) delete this.events[name];\n};\n\n/**\n * Call all functions that bounded to the given event.\n *\n * Additional data can be passed to the event handler as arguments to `emit`\n * after the event name.\n *\n * @param {String} eventName The name of the event to emit.\n * @memberOf EventEmitter\n */\nelasticlunr.EventEmitter.prototype.emit = function (name) {\n  if (!this.hasHandler(name)) return;\n\n  var args = Array.prototype.slice.call(arguments, 1);\n\n  this.events[name].forEach(function (fn) {\n    fn.apply(undefined, args);\n  }, this);\n};\n\n/**\n * Checks whether a handler has ever been stored against an event.\n *\n * @param {String} eventName The name of the event to check.\n * @private\n * @memberOf EventEmitter\n */\nelasticlunr.EventEmitter.prototype.hasHandler = function (name) {\n  return name in this.events;\n};\n/*!\n * elasticlunr.tokenizer\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n */\n\n/**\n * A function for splitting a string into tokens.\n * Currently English is supported as default.\n * Uses `elasticlunr.tokenizer.seperator` to split strings, you could change\n * the value of this property to set how you want strings are split into tokens.\n * IMPORTANT: use elasticlunr.tokenizer.seperator carefully, if you are not familiar with\n * text process, then you'd better not change it.\n *\n * @module\n * @param {String} str The string that you want to tokenize.\n * @see elasticlunr.tokenizer.seperator\n * @return {Array}\n */\nelasticlunr.tokenizer = function (str) {\n  if (!arguments.length || str === null || str === undefined) return [];\n  if (Array.isArray(str)) {\n    var arr = str.filter(function(token) {\n      if (token === null || token === undefined) {\n        return false;\n      }\n\n      return true;\n    });\n\n    arr = arr.map(function (t) {\n      return elasticlunr.utils.toString(t).toLowerCase();\n    });\n\n    var out = [];\n    arr.forEach(function(item) {\n      var tokens = item.split(elasticlunr.tokenizer.seperator);\n      out = out.concat(tokens);\n    }, this);\n\n    return out;\n  }\n\n  return str.toString().trim().toLowerCase().split(elasticlunr.tokenizer.seperator);\n};\n\n/**\n * Default string seperator.\n */\nelasticlunr.tokenizer.defaultSeperator = /[\\s\\-]+/;\n\n/**\n * The sperator used to split a string into tokens. Override this property to change the behaviour of\n * `elasticlunr.tokenizer` behaviour when tokenizing strings. By default this splits on whitespace and hyphens.\n *\n * @static\n * @see elasticlunr.tokenizer\n */\nelasticlunr.tokenizer.seperator = elasticlunr.tokenizer.defaultSeperator;\n\n/**\n * Set up customized string seperator\n *\n * @param {Object} sep The customized seperator that you want to use to tokenize a string.\n */\nelasticlunr.tokenizer.setSeperator = function(sep) {\n    if (sep !== null && sep !== undefined && typeof(sep) === 'object') {\n        elasticlunr.tokenizer.seperator = sep;\n    }\n}\n\n/**\n * Reset string seperator\n *\n */\nelasticlunr.tokenizer.resetSeperator = function() {\n    elasticlunr.tokenizer.seperator = elasticlunr.tokenizer.defaultSeperator;\n}\n\n/**\n * Get string seperator\n *\n */\nelasticlunr.tokenizer.getSeperator = function() {\n    return elasticlunr.tokenizer.seperator;\n}\n/*!\n * elasticlunr.Pipeline\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n */\n\n/**\n * elasticlunr.Pipelines maintain an ordered list of functions to be applied to \n * both documents tokens and query tokens.\n *\n * An instance of elasticlunr.Index will contain a pipeline\n * with a trimmer, a stop word filter, an English stemmer. Extra\n * functions can be added before or after either of these functions or these\n * default functions can be removed.\n *\n * When run the pipeline, it will call each function in turn.\n *\n * The output of the functions in the pipeline will be passed to the next function\n * in the pipeline. To exclude a token from entering the index the function\n * should return undefined, the rest of the pipeline will not be called with\n * this token.\n *\n * For serialisation of pipelines to work, all functions used in an instance of\n * a pipeline should be registered with elasticlunr.Pipeline. Registered functions can\n * then be loaded. If trying to load a serialised pipeline that uses functions\n * that are not registered an error will be thrown.\n *\n * If not planning on serialising the pipeline then registering pipeline functions\n * is not necessary.\n *\n * @constructor\n */\nelasticlunr.Pipeline = function () {\n  this._queue = [];\n};\n\nelasticlunr.Pipeline.registeredFunctions = {};\n\n/**\n * Register a function in the pipeline.\n *\n * Functions that are used in the pipeline should be registered if the pipeline\n * needs to be serialised, or a serialised pipeline needs to be loaded.\n *\n * Registering a function does not add it to a pipeline, functions must still be\n * added to instances of the pipeline for them to be used when running a pipeline.\n *\n * @param {Function} fn The function to register.\n * @param {String} label The label to register this function with\n * @memberOf Pipeline\n */\nelasticlunr.Pipeline.registerFunction = function (fn, label) {\n  if (label in elasticlunr.Pipeline.registeredFunctions) {\n    elasticlunr.utils.warn('Overwriting existing registered function: ' + label);\n  }\n\n  fn.label = label;\n  elasticlunr.Pipeline.registeredFunctions[label] = fn;\n};\n\n/**\n * Get a registered function in the pipeline.\n *\n * @param {String} label The label of registered function.\n * @return {Function}\n * @memberOf Pipeline\n */\nelasticlunr.Pipeline.getRegisteredFunction = function (label) {\n  if ((label in elasticlunr.Pipeline.registeredFunctions) !== true) {\n    return null;\n  }\n\n  return elasticlunr.Pipeline.registeredFunctions[label];\n};\n\n/**\n * Warns if the function is not registered as a Pipeline function.\n *\n * @param {Function} fn The function to check for.\n * @private\n * @memberOf Pipeline\n */\nelasticlunr.Pipeline.warnIfFunctionNotRegistered = function (fn) {\n  var isRegistered = fn.label && (fn.label in this.registeredFunctions);\n\n  if (!isRegistered) {\n    elasticlunr.utils.warn('Function is not registered with pipeline. This may cause problems when serialising the index.\\n', fn);\n  }\n};\n\n/**\n * Loads a previously serialised pipeline.\n *\n * All functions to be loaded must already be registered with elasticlunr.Pipeline.\n * If any function from the serialised data has not been registered then an\n * error will be thrown.\n *\n * @param {Object} serialised The serialised pipeline to load.\n * @return {elasticlunr.Pipeline}\n * @memberOf Pipeline\n */\nelasticlunr.Pipeline.load = function (serialised) {\n  var pipeline = new elasticlunr.Pipeline;\n\n  serialised.forEach(function (fnName) {\n    var fn = elasticlunr.Pipeline.getRegisteredFunction(fnName);\n\n    if (fn) {\n      pipeline.add(fn);\n    } else {\n      throw new Error('Cannot load un-registered function: ' + fnName);\n    }\n  });\n\n  return pipeline;\n};\n\n/**\n * Adds new functions to the end of the pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {Function} functions Any number of functions to add to the pipeline.\n * @memberOf Pipeline\n */\nelasticlunr.Pipeline.prototype.add = function () {\n  var fns = Array.prototype.slice.call(arguments);\n\n  fns.forEach(function (fn) {\n    elasticlunr.Pipeline.warnIfFunctionNotRegistered(fn);\n    this._queue.push(fn);\n  }, this);\n};\n\n/**\n * Adds a single function after a function that already exists in the\n * pipeline.\n *\n * Logs a warning if the function has not been registered.\n * If existingFn is not found, throw an Exception.\n *\n * @param {Function} existingFn A function that already exists in the pipeline.\n * @param {Function} newFn The new function to add to the pipeline.\n * @memberOf Pipeline\n */\nelasticlunr.Pipeline.prototype.after = function (existingFn, newFn) {\n  elasticlunr.Pipeline.warnIfFunctionNotRegistered(newFn);\n\n  var pos = this._queue.indexOf(existingFn);\n  if (pos === -1) {\n    throw new Error('Cannot find existingFn');\n  }\n\n  this._queue.splice(pos + 1, 0, newFn);\n};\n\n/**\n * Adds a single function before a function that already exists in the\n * pipeline.\n *\n * Logs a warning if the function has not been registered.\n * If existingFn is not found, throw an Exception.\n *\n * @param {Function} existingFn A function that already exists in the pipeline.\n * @param {Function} newFn The new function to add to the pipeline.\n * @memberOf Pipeline\n */\nelasticlunr.Pipeline.prototype.before = function (existingFn, newFn) {\n  elasticlunr.Pipeline.warnIfFunctionNotRegistered(newFn);\n\n  var pos = this._queue.indexOf(existingFn);\n  if (pos === -1) {\n    throw new Error('Cannot find existingFn');\n  }\n\n  this._queue.splice(pos, 0, newFn);\n};\n\n/**\n * Removes a function from the pipeline.\n *\n * @param {Function} fn The function to remove from the pipeline.\n * @memberOf Pipeline\n */\nelasticlunr.Pipeline.prototype.remove = function (fn) {\n  var pos = this._queue.indexOf(fn);\n  if (pos === -1) {\n    return;\n  }\n\n  this._queue.splice(pos, 1);\n};\n\n/**\n * Runs the current list of functions that registered in the pipeline against the\n * input tokens.\n *\n * @param {Array} tokens The tokens to run through the pipeline.\n * @return {Array}\n * @memberOf Pipeline\n */\nelasticlunr.Pipeline.prototype.run = function (tokens) {\n  var out = [],\n      tokenLength = tokens.length,\n      pipelineLength = this._queue.length;\n\n  for (var i = 0; i < tokenLength; i++) {\n    var token = tokens[i];\n\n    for (var j = 0; j < pipelineLength; j++) {\n      token = this._queue[j](token, i, tokens);\n      if (token === void 0 || token === null) break;\n    };\n\n    if (token !== void 0 && token !== null) out.push(token);\n  };\n\n  return out;\n};\n\n/**\n * Resets the pipeline by removing any existing processors.\n *\n * @memberOf Pipeline\n */\nelasticlunr.Pipeline.prototype.reset = function () {\n  this._queue = [];\n};\n\n /**\n  * Get the pipeline if user want to check the pipeline.\n  *\n  * @memberOf Pipeline\n  */\n elasticlunr.Pipeline.prototype.get = function () {\n   return this._queue;\n };\n\n/**\n * Returns a representation of the pipeline ready for serialisation.\n * Only serialize pipeline function's name. Not storing function, so when\n * loading the archived JSON index file, corresponding pipeline function is \n * added by registered function of elasticlunr.Pipeline.registeredFunctions\n *\n * Logs a warning if the function has not been registered.\n *\n * @return {Array}\n * @memberOf Pipeline\n */\nelasticlunr.Pipeline.prototype.toJSON = function () {\n  return this._queue.map(function (fn) {\n    elasticlunr.Pipeline.warnIfFunctionNotRegistered(fn);\n    return fn.label;\n  });\n};\n/*!\n * elasticlunr.Index\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n */\n\n/**\n * elasticlunr.Index is object that manages a search index.  It contains the indexes\n * and stores all the tokens and document lookups.  It also provides the main\n * user facing API for the library.\n *\n * @constructor\n */\nelasticlunr.Index = function () {\n  this._fields = [];\n  this._ref = 'id';\n  this.pipeline = new elasticlunr.Pipeline;\n  this.documentStore = new elasticlunr.DocumentStore;\n  this.index = {};\n  this.eventEmitter = new elasticlunr.EventEmitter;\n  this._idfCache = {};\n\n  this.on('add', 'remove', 'update', (function () {\n    this._idfCache = {};\n  }).bind(this));\n};\n\n/**\n * Bind a handler to events being emitted by the index.\n *\n * The handler can be bound to many events at the same time.\n *\n * @param {String} [eventName] The name(s) of events to bind the function to.\n * @param {Function} fn The serialised set to load.\n * @memberOf Index\n */\nelasticlunr.Index.prototype.on = function () {\n  var args = Array.prototype.slice.call(arguments);\n  return this.eventEmitter.addListener.apply(this.eventEmitter, args);\n};\n\n/**\n * Removes a handler from an event being emitted by the index.\n *\n * @param {String} eventName The name of events to remove the function from.\n * @param {Function} fn The serialised set to load.\n * @memberOf Index\n */\nelasticlunr.Index.prototype.off = function (name, fn) {\n  return this.eventEmitter.removeListener(name, fn);\n};\n\n/**\n * Loads a previously serialised index.\n *\n * Issues a warning if the index being imported was serialised\n * by a different version of elasticlunr.\n *\n * @param {Object} serialisedData The serialised set to load.\n * @return {elasticlunr.Index}\n * @memberOf Index\n */\nelasticlunr.Index.load = function (serialisedData) {\n  if (serialisedData.version !== elasticlunr.version) {\n    elasticlunr.utils.warn('version mismatch: current '\n                    + elasticlunr.version + ' importing ' + serialisedData.version);\n  }\n\n  var idx = new this;\n\n  idx._fields = serialisedData.fields;\n  idx._ref = serialisedData.ref;\n  idx.documentStore = elasticlunr.DocumentStore.load(serialisedData.documentStore);\n  idx.pipeline = elasticlunr.Pipeline.load(serialisedData.pipeline);\n  idx.index = {};\n  for (var field in serialisedData.index) {\n    idx.index[field] = elasticlunr.InvertedIndex.load(serialisedData.index[field]);\n  }\n\n  return idx;\n};\n\n/**\n * Adds a field to the list of fields that will be searchable within documents in the index.\n *\n * Remember that inner index is build based on field, which means each field has one inverted index.\n *\n * Fields should be added before any documents are added to the index, fields\n * that are added after documents are added to the index will only apply to new\n * documents added to the index.\n *\n * @param {String} fieldName The name of the field within the document that should be indexed\n * @return {elasticlunr.Index}\n * @memberOf Index\n */\nelasticlunr.Index.prototype.addField = function (fieldName) {\n  this._fields.push(fieldName);\n  this.index[fieldName] = new elasticlunr.InvertedIndex;\n  return this;\n};\n\n/**\n * Sets the property used to uniquely identify documents added to the index,\n * by default this property is 'id'.\n *\n * This should only be changed before adding documents to the index, changing\n * the ref property without resetting the index can lead to unexpected results.\n *\n * @param {String} refName The property to use to uniquely identify the\n * documents in the index.\n * @param {Boolean} emitEvent Whether to emit add events, defaults to true\n * @return {elasticlunr.Index}\n * @memberOf Index\n */\nelasticlunr.Index.prototype.setRef = function (refName) {\n  this._ref = refName;\n  return this;\n};\n\n/**\n *\n * Set if the JSON format original documents are save into elasticlunr.DocumentStore\n *\n * Defaultly save all the original JSON documents.\n *\n * @param {Boolean} save Whether to save the original JSON documents.\n * @return {elasticlunr.Index}\n * @memberOf Index\n */\nelasticlunr.Index.prototype.saveDocument = function (save) {\n  this.documentStore = new elasticlunr.DocumentStore(save);\n  return this;\n};\n\n/**\n * Add a JSON format document to the index.\n *\n * This is the way new documents enter the index, this function will run the\n * fields from the document through the index's pipeline and then add it to\n * the index, it will then show up in search results.\n *\n * An 'add' event is emitted with the document that has been added and the index\n * the document has been added to. This event can be silenced by passing false\n * as the second argument to add.\n *\n * @param {Object} doc The JSON format document to add to the index.\n * @param {Boolean} emitEvent Whether or not to emit events, default true.\n * @memberOf Index\n */\nelasticlunr.Index.prototype.addDoc = function (doc, emitEvent) {\n  if (!doc) return;\n  var emitEvent = emitEvent === undefined ? true : emitEvent;\n\n  var docRef = doc[this._ref];\n\n  this.documentStore.addDoc(docRef, doc);\n  this._fields.forEach(function (field) {\n    var fieldTokens = this.pipeline.run(elasticlunr.tokenizer(doc[field]));\n    this.documentStore.addFieldLength(docRef, field, fieldTokens.length);\n\n    var tokenCount = {};\n    fieldTokens.forEach(function (token) {\n      if (token in tokenCount) tokenCount[token] += 1;\n      else tokenCount[token] = 1;\n    }, this);\n\n    for (var token in tokenCount) {\n      var termFrequency = tokenCount[token];\n      termFrequency = Math.sqrt(termFrequency);\n      this.index[field].addToken(token, { ref: docRef, tf: termFrequency });\n    }\n  }, this);\n\n  if (emitEvent) this.eventEmitter.emit('add', doc, this);\n};\n\n/**\n * Removes a document from the index by doc ref.\n *\n * To make sure documents no longer show up in search results they can be\n * removed from the index using this method.\n *\n * A 'remove' event is emitted with the document that has been removed and the index\n * the document has been removed from. This event can be silenced by passing false\n * as the second argument to remove.\n *\n * If user setting DocumentStore not storing the documents, then remove doc by docRef is not allowed.\n *\n * @param {String|Integer} docRef The document ref to remove from the index.\n * @param {Boolean} emitEvent Whether to emit remove events, defaults to true\n * @memberOf Index\n */\nelasticlunr.Index.prototype.removeDocByRef = function (docRef, emitEvent) {\n  if (!docRef) return;\n  if (this.documentStore.isDocStored() === false) {\n    return;\n  }\n\n  if (!this.documentStore.hasDoc(docRef)) return;\n  var doc = this.documentStore.getDoc(docRef);\n  this.removeDoc(doc, false);\n};\n\n/**\n * Removes a document from the index.\n * This remove operation could work even the original doc is not store in the DocumentStore.\n *\n * To make sure documents no longer show up in search results they can be\n * removed from the index using this method.\n *\n * A 'remove' event is emitted with the document that has been removed and the index\n * the document has been removed from. This event can be silenced by passing false\n * as the second argument to remove.\n *\n *\n * @param {Object} doc The document ref to remove from the index.\n * @param {Boolean} emitEvent Whether to emit remove events, defaults to true\n * @memberOf Index\n */\nelasticlunr.Index.prototype.removeDoc = function (doc, emitEvent) {\n  if (!doc) return;\n\n  var emitEvent = emitEvent === undefined ? true : emitEvent;\n\n  var docRef = doc[this._ref];\n  if (!this.documentStore.hasDoc(docRef)) return;\n\n  this.documentStore.removeDoc(docRef);\n\n  this._fields.forEach(function (field) {\n    var fieldTokens = this.pipeline.run(elasticlunr.tokenizer(doc[field]));\n    fieldTokens.forEach(function (token) {\n      this.index[field].removeToken(token, docRef);\n    }, this);\n  }, this);\n\n  if (emitEvent) this.eventEmitter.emit('remove', doc, this);\n};\n\n/**\n * Updates a document in the index.\n *\n * When a document contained within the index gets updated, fields changed,\n * added or removed, to make sure it correctly matched against search queries,\n * it should be updated in the index.\n *\n * This method is just a wrapper around `remove` and `add`\n *\n * An 'update' event is emitted with the document that has been updated and the index.\n * This event can be silenced by passing false as the second argument to update. Only\n * an update event will be fired, the 'add' and 'remove' events of the underlying calls\n * are silenced.\n *\n * @param {Object} doc The document to update in the index.\n * @param {Boolean} emitEvent Whether to emit update events, defaults to true\n * @see Index.prototype.remove\n * @see Index.prototype.add\n * @memberOf Index\n */\nelasticlunr.Index.prototype.updateDoc = function (doc, emitEvent) {\n  var emitEvent = emitEvent === undefined ? true : emitEvent;\n\n  this.removeDocByRef(doc[this._ref], false);\n  this.addDoc(doc, false);\n\n  if (emitEvent) this.eventEmitter.emit('update', doc, this);\n};\n\n/**\n * Calculates the inverse document frequency for a token within the index of a field.\n *\n * @param {String} token The token to calculate the idf of.\n * @param {String} field The field to compute idf.\n * @see Index.prototype.idf\n * @private\n * @memberOf Index\n */\nelasticlunr.Index.prototype.idf = function (term, field) {\n  var cacheKey = \"@\" + field + '/' + term;\n  if (Object.prototype.hasOwnProperty.call(this._idfCache, cacheKey)) return this._idfCache[cacheKey];\n\n  var df = this.index[field].getDocFreq(term);\n  var idf = 1 + Math.log(this.documentStore.length / (df + 1));\n  this._idfCache[cacheKey] = idf;\n\n  return idf;\n};\n\n/**\n * get fields of current index instance\n *\n * @return {Array}\n */\nelasticlunr.Index.prototype.getFields = function () {\n  return this._fields.slice();\n};\n\n/**\n * Searches the index using the passed query.\n * Queries should be a string, multiple words are allowed.\n *\n * If config is null, will search all fields defaultly, and lead to OR based query.\n * If config is specified, will search specified with query time boosting.\n *\n * All query tokens are passed through the same pipeline that document tokens\n * are passed through, so any language processing involved will be run on every\n * query term.\n *\n * Each query term is expanded, so that the term 'he' might be expanded to\n * 'hello' and 'help' if those terms were already included in the index.\n *\n * Matching documents are returned as an array of objects, each object contains\n * the matching document ref, as set for this index, and the similarity score\n * for this document against the query.\n *\n * @param {String} query The query to search the index with.\n * @param {JSON} userConfig The user query config, JSON format.\n * @return {Object}\n * @see Index.prototype.idf\n * @see Index.prototype.documentVector\n * @memberOf Index\n */\nelasticlunr.Index.prototype.search = function (query, userConfig) {\n  if (!query) return [];\n\n  var configStr = null;\n  if (userConfig != null) {\n    configStr = JSON.stringify(userConfig);\n  }\n\n  var config = new elasticlunr.Configuration(configStr, this.getFields()).get();\n\n  var queryTokens = this.pipeline.run(elasticlunr.tokenizer(query));\n\n  var queryResults = {};\n\n  for (var field in config) {\n    var fieldSearchResults = this.fieldSearch(queryTokens, field, config);\n    var fieldBoost = config[field].boost;\n\n    for (var docRef in fieldSearchResults) {\n      fieldSearchResults[docRef] = fieldSearchResults[docRef] * fieldBoost;\n    }\n\n    for (var docRef in fieldSearchResults) {\n      if (docRef in queryResults) {\n        queryResults[docRef] += fieldSearchResults[docRef];\n      } else {\n        queryResults[docRef] = fieldSearchResults[docRef];\n      }\n    }\n  }\n\n  var results = [];\n  for (var docRef in queryResults) {\n    results.push({ref: docRef, score: queryResults[docRef]});\n  }\n\n  results.sort(function (a, b) { return b.score - a.score; });\n  return results;\n};\n\n/**\n * search queryTokens in specified field.\n *\n * @param {Array} queryTokens The query tokens to query in this field.\n * @param {String} field Field to query in.\n * @param {elasticlunr.Configuration} config The user query config, JSON format.\n * @return {Object}\n */\nelasticlunr.Index.prototype.fieldSearch = function (queryTokens, fieldName, config) {\n  var booleanType = config[fieldName].bool;\n  var expand = config[fieldName].expand;\n  var boost = config[fieldName].boost;\n  var scores = null;\n  var docTokens = {};\n\n  // Do nothing if the boost is 0\n  if (boost === 0) {\n    return;\n  }\n\n  queryTokens.forEach(function (token) {\n    var tokens = [token];\n    if (expand == true) {\n      tokens = this.index[fieldName].expandToken(token);\n    }\n    // Consider every query token in turn. If expanded, each query token\n    // corresponds to a set of tokens, which is all tokens in the \n    // index matching the pattern queryToken* .\n    // For the set of tokens corresponding to a query token, find and score\n    // all matching documents. Store those scores in queryTokenScores, \n    // keyed by docRef.\n    // Then, depending on the value of booleanType, combine the scores\n    // for this query token with previous scores.  If booleanType is OR,\n    // then merge the scores by summing into the accumulated total, adding\n    // new document scores are required (effectively a union operator). \n    // If booleanType is AND, accumulate scores only if the document \n    // has previously been scored by another query token (an intersection\n    // operation0. \n    // Furthermore, since when booleanType is AND, additional \n    // query tokens can't add new documents to the result set, use the\n    // current document set to limit the processing of each new query \n    // token for efficiency (i.e., incremental intersection).\n    \n    var queryTokenScores = {};\n    tokens.forEach(function (key) {\n      var docs = this.index[fieldName].getDocs(key);\n      var idf = this.idf(key, fieldName);\n      \n      if (scores && booleanType == 'AND') {\n          // special case, we can rule out documents that have been\n          // already been filtered out because they weren't scored\n          // by previous query token passes.\n          var filteredDocs = {};\n          for (var docRef in scores) {\n              if (docRef in docs) {\n                  filteredDocs[docRef] = docs[docRef];\n              }\n          }\n          docs = filteredDocs;\n      }\n      // only record appeared token for retrieved documents for the\n      // original token, not for expaned token.\n      // beause for doing coordNorm for a retrieved document, coordNorm only care how many\n      // query token appear in that document.\n      // so expanded token should not be added into docTokens, if added, this will pollute the\n      // coordNorm\n      if (key == token) {\n        this.fieldSearchStats(docTokens, key, docs);\n      }\n\n      for (var docRef in docs) {\n        var tf = this.index[fieldName].getTermFrequency(key, docRef);\n        var fieldLength = this.documentStore.getFieldLength(docRef, fieldName);\n        var fieldLengthNorm = 1;\n        if (fieldLength != 0) {\n          fieldLengthNorm = 1 / Math.sqrt(fieldLength);\n        }\n\n        var penality = 1;\n        if (key != token) {\n          // currently I'm not sure if this penality is enough,\n          // need to do verification\n          penality = (1 - (key.length - token.length) / key.length) * 0.15;\n        }\n\n        var score = tf * idf * fieldLengthNorm * penality;\n\n        if (docRef in queryTokenScores) {\n          queryTokenScores[docRef] += score;\n        } else {\n          queryTokenScores[docRef] = score;\n        }\n      }\n    }, this);\n    \n    scores = this.mergeScores(scores, queryTokenScores, booleanType);\n  }, this);\n\n  scores = this.coordNorm(scores, docTokens, queryTokens.length);\n  return scores;\n};\n\n/**\n * Merge the scores from one set of tokens into an accumulated score table.\n * Exact operation depends on the op parameter. If op is 'AND', then only the\n * intersection of the two score lists is retained. Otherwise, the union of\n * the two score lists is returned. For internal use only.\n *\n * @param {Object} bool accumulated scores. Should be null on first call.\n * @param {String} scores new scores to merge into accumScores.\n * @param {Object} op merge operation (should be 'AND' or 'OR').\n *\n */\n\nelasticlunr.Index.prototype.mergeScores = function (accumScores, scores, op) {\n    if (!accumScores) {\n        return scores; \n    }\n    if (op == 'AND') {\n        var intersection = {};\n        for (var docRef in scores) {\n            if (docRef in accumScores) {\n                intersection[docRef] = accumScores[docRef] + scores[docRef];\n            }\n        }\n        return intersection;\n    } else {\n        for (var docRef in scores) {\n            if (docRef in accumScores) {\n                accumScores[docRef] += scores[docRef];\n            } else {\n                accumScores[docRef] = scores[docRef];\n            }\n        }\n        return accumScores;\n    }\n};\n\n\n/**\n * Record the occuring query token of retrieved doc specified by doc field.\n * Only for inner user.\n *\n * @param {Object} docTokens a data structure stores which token appears in the retrieved doc.\n * @param {String} token query token\n * @param {Object} docs the retrieved documents of the query token\n *\n */\nelasticlunr.Index.prototype.fieldSearchStats = function (docTokens, token, docs) {\n  for (var doc in docs) {\n    if (doc in docTokens) {\n      docTokens[doc].push(token);\n    } else {\n      docTokens[doc] = [token];\n    }\n  }\n};\n\n/**\n * coord norm the score of a doc.\n * if a doc contain more query tokens, then the score will larger than the doc\n * contains less query tokens.\n *\n * only for inner use.\n *\n * @param {Object} results first results\n * @param {Object} docs field search results of a token\n * @param {Integer} n query token number\n * @return {Object}\n */\nelasticlunr.Index.prototype.coordNorm = function (scores, docTokens, n) {\n  for (var doc in scores) {\n    if (!(doc in docTokens)) continue;\n    var tokens = docTokens[doc].length;\n    scores[doc] = scores[doc] * tokens / n;\n  }\n\n  return scores;\n};\n\n/**\n * Returns a representation of the index ready for serialisation.\n *\n * @return {Object}\n * @memberOf Index\n */\nelasticlunr.Index.prototype.toJSON = function () {\n  var indexJson = {};\n  this._fields.forEach(function (field) {\n    indexJson[field] = this.index[field].toJSON();\n  }, this);\n\n  return {\n    version: elasticlunr.version,\n    fields: this._fields,\n    ref: this._ref,\n    documentStore: this.documentStore.toJSON(),\n    index: indexJson,\n    pipeline: this.pipeline.toJSON()\n  };\n};\n\n/**\n * Applies a plugin to the current index.\n *\n * A plugin is a function that is called with the index as its context.\n * Plugins can be used to customise or extend the behaviour the index\n * in some way. A plugin is just a function, that encapsulated the custom\n * behaviour that should be applied to the index.\n *\n * The plugin function will be called with the index as its argument, additional\n * arguments can also be passed when calling use. The function will be called\n * with the index as its context.\n *\n * Example:\n *\n *     var myPlugin = function (idx, arg1, arg2) {\n *       // `this` is the index to be extended\n *       // apply any extensions etc here.\n *     }\n *\n *     var idx = elasticlunr(function () {\n *       this.use(myPlugin, 'arg1', 'arg2')\n *     })\n *\n * @param {Function} plugin The plugin to apply.\n * @memberOf Index\n */\nelasticlunr.Index.prototype.use = function (plugin) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  args.unshift(this);\n  plugin.apply(this, args);\n};\n/*!\n * elasticlunr.DocumentStore\n * Copyright (C) 2016 Wei Song\n */\n\n/**\n * elasticlunr.DocumentStore is a simple key-value document store used for storing sets of tokens for\n * documents stored in index.\n *\n * elasticlunr.DocumentStore store original JSON format documents that you could build search snippet by this original JSON document.\n *\n * user could choose whether original JSON format document should be store, if no configuration then document will be stored defaultly.\n * If user care more about the index size, user could select not store JSON documents, then this will has some defects, such as user\n * could not use JSON document to generate snippets of search results.\n *\n * @param {Boolean} save If the original JSON document should be stored.\n * @constructor\n * @module\n */\nelasticlunr.DocumentStore = function (save) {\n  if (save === null || save === undefined) {\n    this._save = true;\n  } else {\n    this._save = save;\n  }\n\n  this.docs = {};\n  this.docInfo = {};\n  this.length = 0;\n};\n\n/**\n * Loads a previously serialised document store\n *\n * @param {Object} serialisedData The serialised document store to load.\n * @return {elasticlunr.DocumentStore}\n */\nelasticlunr.DocumentStore.load = function (serialisedData) {\n  var store = new this;\n\n  store.length = serialisedData.length;\n  store.docs = serialisedData.docs;\n  store.docInfo = serialisedData.docInfo;\n  store._save = serialisedData.save;\n\n  return store;\n};\n\n/**\n * check if current instance store the original doc\n *\n * @return {Boolean}\n */\nelasticlunr.DocumentStore.prototype.isDocStored = function () {\n  return this._save;\n};\n\n/**\n * Stores the given doc in the document store against the given id.\n * If docRef already exist, then update doc.\n *\n * Document is store by original JSON format, then you could use original document to generate search snippets.\n *\n * @param {Integer|String} docRef The key used to store the JSON format doc.\n * @param {Object} doc The JSON format doc.\n */\nelasticlunr.DocumentStore.prototype.addDoc = function (docRef, doc) {\n  if (!this.hasDoc(docRef)) this.length++;\n\n  if (this._save === true) {\n    this.docs[docRef] = clone(doc);\n  } else {\n    this.docs[docRef] = null;\n  }\n};\n\n/**\n * Retrieves the JSON doc from the document store for a given key.\n *\n * If docRef not found, return null.\n * If user set not storing the documents, return null.\n *\n * @param {Integer|String} docRef The key to lookup and retrieve from the document store.\n * @return {Object}\n * @memberOf DocumentStore\n */\nelasticlunr.DocumentStore.prototype.getDoc = function (docRef) {\n  if (this.hasDoc(docRef) === false) return null;\n  return this.docs[docRef];\n};\n\n/**\n * Checks whether the document store contains a key (docRef).\n *\n * @param {Integer|String} docRef The id to look up in the document store.\n * @return {Boolean}\n * @memberOf DocumentStore\n */\nelasticlunr.DocumentStore.prototype.hasDoc = function (docRef) {\n  return docRef in this.docs;\n};\n\n/**\n * Removes the value for a key in the document store.\n *\n * @param {Integer|String} docRef The id to remove from the document store.\n * @memberOf DocumentStore\n */\nelasticlunr.DocumentStore.prototype.removeDoc = function (docRef) {\n  if (!this.hasDoc(docRef)) return;\n\n  delete this.docs[docRef];\n  delete this.docInfo[docRef];\n  this.length--;\n};\n\n/**\n * Add field length of a document's field tokens from pipeline results.\n * The field length of a document is used to do field length normalization even without the original JSON document stored.\n *\n * @param {Integer|String} docRef document's id or reference\n * @param {String} fieldName field name\n * @param {Integer} length field length\n */\nelasticlunr.DocumentStore.prototype.addFieldLength = function (docRef, fieldName, length) {\n  if (docRef === null || docRef === undefined) return;\n  if (this.hasDoc(docRef) == false) return;\n\n  if (!this.docInfo[docRef]) this.docInfo[docRef] = {};\n  this.docInfo[docRef][fieldName] = length;\n};\n\n/**\n * Update field length of a document's field tokens from pipeline results.\n * The field length of a document is used to do field length normalization even without the original JSON document stored.\n *\n * @param {Integer|String} docRef document's id or reference\n * @param {String} fieldName field name\n * @param {Integer} length field length\n */\nelasticlunr.DocumentStore.prototype.updateFieldLength = function (docRef, fieldName, length) {\n  if (docRef === null || docRef === undefined) return;\n  if (this.hasDoc(docRef) == false) return;\n\n  this.addFieldLength(docRef, fieldName, length);\n};\n\n/**\n * get field length of a document by docRef\n *\n * @param {Integer|String} docRef document id or reference\n * @param {String} fieldName field name\n * @return {Integer} field length\n */\nelasticlunr.DocumentStore.prototype.getFieldLength = function (docRef, fieldName) {\n  if (docRef === null || docRef === undefined) return 0;\n\n  if (!(docRef in this.docs)) return 0;\n  if (!(fieldName in this.docInfo[docRef])) return 0;\n  return this.docInfo[docRef][fieldName];\n};\n\n/**\n * Returns a JSON representation of the document store used for serialisation.\n *\n * @return {Object} JSON format\n * @memberOf DocumentStore\n */\nelasticlunr.DocumentStore.prototype.toJSON = function () {\n  return {\n    docs: this.docs,\n    docInfo: this.docInfo,\n    length: this.length,\n    save: this._save\n  };\n};\n\n/**\n * Cloning object\n *\n * @param {Object} object in JSON format\n * @return {Object} copied object\n */\nfunction clone(obj) {\n  if (null === obj || \"object\" !== typeof obj) return obj;\n\n  var copy = obj.constructor();\n\n  for (var attr in obj) {\n    if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];\n  }\n\n  return copy;\n}\n/*!\n * elasticlunr.stemmer\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt\n */\n\n/**\n * elasticlunr.stemmer is an english language stemmer, this is a JavaScript\n * implementation of the PorterStemmer taken from http://tartarus.org/~martin\n *\n * @module\n * @param {String} str The string to stem\n * @return {String}\n * @see elasticlunr.Pipeline\n */\nelasticlunr.stemmer = (function(){\n  var step2list = {\n      \"ational\" : \"ate\",\n      \"tional\" : \"tion\",\n      \"enci\" : \"ence\",\n      \"anci\" : \"ance\",\n      \"izer\" : \"ize\",\n      \"bli\" : \"ble\",\n      \"alli\" : \"al\",\n      \"entli\" : \"ent\",\n      \"eli\" : \"e\",\n      \"ousli\" : \"ous\",\n      \"ization\" : \"ize\",\n      \"ation\" : \"ate\",\n      \"ator\" : \"ate\",\n      \"alism\" : \"al\",\n      \"iveness\" : \"ive\",\n      \"fulness\" : \"ful\",\n      \"ousness\" : \"ous\",\n      \"aliti\" : \"al\",\n      \"iviti\" : \"ive\",\n      \"biliti\" : \"ble\",\n      \"logi\" : \"log\"\n    },\n\n    step3list = {\n      \"icate\" : \"ic\",\n      \"ative\" : \"\",\n      \"alize\" : \"al\",\n      \"iciti\" : \"ic\",\n      \"ical\" : \"ic\",\n      \"ful\" : \"\",\n      \"ness\" : \"\"\n    },\n\n    c = \"[^aeiou]\",          // consonant\n    v = \"[aeiouy]\",          // vowel\n    C = c + \"[^aeiouy]*\",    // consonant sequence\n    V = v + \"[aeiou]*\",      // vowel sequence\n\n    mgr0 = \"^(\" + C + \")?\" + V + C,               // [C]VC... is m>0\n    meq1 = \"^(\" + C + \")?\" + V + C + \"(\" + V + \")?$\",  // [C]VC[V] is m=1\n    mgr1 = \"^(\" + C + \")?\" + V + C + V + C,       // [C]VCVC... is m>1\n    s_v = \"^(\" + C + \")?\" + v;                   // vowel in stem\n\n  var re_mgr0 = new RegExp(mgr0);\n  var re_mgr1 = new RegExp(mgr1);\n  var re_meq1 = new RegExp(meq1);\n  var re_s_v = new RegExp(s_v);\n\n  var re_1a = /^(.+?)(ss|i)es$/;\n  var re2_1a = /^(.+?)([^s])s$/;\n  var re_1b = /^(.+?)eed$/;\n  var re2_1b = /^(.+?)(ed|ing)$/;\n  var re_1b_2 = /.$/;\n  var re2_1b_2 = /(at|bl|iz)$/;\n  var re3_1b_2 = new RegExp(\"([^aeiouylsz])\\\\1$\");\n  var re4_1b_2 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n  var re_1c = /^(.+?[^aeiou])y$/;\n  var re_2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\n\n  var re_3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\n\n  var re_4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\n  var re2_4 = /^(.+?)(s|t)(ion)$/;\n\n  var re_5 = /^(.+?)e$/;\n  var re_5_1 = /ll$/;\n  var re3_5 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n  var porterStemmer = function porterStemmer(w) {\n    var   stem,\n      suffix,\n      firstch,\n      re,\n      re2,\n      re3,\n      re4;\n\n    if (w.length < 3) { return w; }\n\n    firstch = w.substr(0,1);\n    if (firstch == \"y\") {\n      w = firstch.toUpperCase() + w.substr(1);\n    }\n\n    // Step 1a\n    re = re_1a\n    re2 = re2_1a;\n\n    if (re.test(w)) { w = w.replace(re,\"$1$2\"); }\n    else if (re2.test(w)) { w = w.replace(re2,\"$1$2\"); }\n\n    // Step 1b\n    re = re_1b;\n    re2 = re2_1b;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      re = re_mgr0;\n      if (re.test(fp[1])) {\n        re = re_1b_2;\n        w = w.replace(re,\"\");\n      }\n    } else if (re2.test(w)) {\n      var fp = re2.exec(w);\n      stem = fp[1];\n      re2 = re_s_v;\n      if (re2.test(stem)) {\n        w = stem;\n        re2 = re2_1b_2;\n        re3 = re3_1b_2;\n        re4 = re4_1b_2;\n        if (re2.test(w)) {  w = w + \"e\"; }\n        else if (re3.test(w)) { re = re_1b_2; w = w.replace(re,\"\"); }\n        else if (re4.test(w)) { w = w + \"e\"; }\n      }\n    }\n\n    // Step 1c - replace suffix y or Y by i if preceded by a non-vowel which is not the first letter of the word (so cry -> cri, by -> by, say -> say)\n    re = re_1c;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      w = stem + \"i\";\n    }\n\n    // Step 2\n    re = re_2;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      suffix = fp[2];\n      re = re_mgr0;\n      if (re.test(stem)) {\n        w = stem + step2list[suffix];\n      }\n    }\n\n    // Step 3\n    re = re_3;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      suffix = fp[2];\n      re = re_mgr0;\n      if (re.test(stem)) {\n        w = stem + step3list[suffix];\n      }\n    }\n\n    // Step 4\n    re = re_4;\n    re2 = re2_4;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      re = re_mgr1;\n      if (re.test(stem)) {\n        w = stem;\n      }\n    } else if (re2.test(w)) {\n      var fp = re2.exec(w);\n      stem = fp[1] + fp[2];\n      re2 = re_mgr1;\n      if (re2.test(stem)) {\n        w = stem;\n      }\n    }\n\n    // Step 5\n    re = re_5;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      re = re_mgr1;\n      re2 = re_meq1;\n      re3 = re3_5;\n      if (re.test(stem) || (re2.test(stem) && !(re3.test(stem)))) {\n        w = stem;\n      }\n    }\n\n    re = re_5_1;\n    re2 = re_mgr1;\n    if (re.test(w) && re2.test(w)) {\n      re = re_1b_2;\n      w = w.replace(re,\"\");\n    }\n\n    // and turn initial Y back to y\n\n    if (firstch == \"y\") {\n      w = firstch.toLowerCase() + w.substr(1);\n    }\n\n    return w;\n  };\n\n  return porterStemmer;\n})();\n\nelasticlunr.Pipeline.registerFunction(elasticlunr.stemmer, 'stemmer');\n/*!\n * elasticlunr.stopWordFilter\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n */\n\n/**\n * elasticlunr.stopWordFilter is an English language stop words filter, any words\n * contained in the stop word list will not be passed through the filter.\n *\n * This is intended to be used in the Pipeline. If the token does not pass the\n * filter then undefined will be returned.\n * Currently this StopwordFilter using dictionary to do O(1) time complexity stop word filtering.\n *\n * @module\n * @param {String} token The token to pass through the filter\n * @return {String}\n * @see elasticlunr.Pipeline\n */\nelasticlunr.stopWordFilter = function (token) {\n  if (token && elasticlunr.stopWordFilter.stopWords[token] !== true) {\n    return token;\n  }\n};\n\n/**\n * Remove predefined stop words\n * if user want to use customized stop words, user could use this function to delete\n * all predefined stopwords.\n *\n * @return {null}\n */\nelasticlunr.clearStopWords = function () {\n  elasticlunr.stopWordFilter.stopWords = {};\n};\n\n/**\n * Add customized stop words\n * user could use this function to add customized stop words\n * \n * @params {Array} words customized stop words\n * @return {null}\n */\nelasticlunr.addStopWords = function (words) {\n  if (words == null || Array.isArray(words) === false) return;\n\n  words.forEach(function (word) {\n    elasticlunr.stopWordFilter.stopWords[word] = true;\n  }, this);\n};\n\n/**\n * Reset to default stop words\n * user could use this function to restore default stop words\n *\n * @return {null}\n */\nelasticlunr.resetStopWords = function () {\n  elasticlunr.stopWordFilter.stopWords = elasticlunr.defaultStopWords;\n};\n\nelasticlunr.defaultStopWords = {\n  \"\": true,\n  \"a\": true,\n  \"able\": true,\n  \"about\": true,\n  \"across\": true,\n  \"after\": true,\n  \"all\": true,\n  \"almost\": true,\n  \"also\": true,\n  \"am\": true,\n  \"among\": true,\n  \"an\": true,\n  \"and\": true,\n  \"any\": true,\n  \"are\": true,\n  \"as\": true,\n  \"at\": true,\n  \"be\": true,\n  \"because\": true,\n  \"been\": true,\n  \"but\": true,\n  \"by\": true,\n  \"can\": true,\n  \"cannot\": true,\n  \"could\": true,\n  \"dear\": true,\n  \"did\": true,\n  \"do\": true,\n  \"does\": true,\n  \"either\": true,\n  \"else\": true,\n  \"ever\": true,\n  \"every\": true,\n  \"for\": true,\n  \"from\": true,\n  \"get\": true,\n  \"got\": true,\n  \"had\": true,\n  \"has\": true,\n  \"have\": true,\n  \"he\": true,\n  \"her\": true,\n  \"hers\": true,\n  \"him\": true,\n  \"his\": true,\n  \"how\": true,\n  \"however\": true,\n  \"i\": true,\n  \"if\": true,\n  \"in\": true,\n  \"into\": true,\n  \"is\": true,\n  \"it\": true,\n  \"its\": true,\n  \"just\": true,\n  \"least\": true,\n  \"let\": true,\n  \"like\": true,\n  \"likely\": true,\n  \"may\": true,\n  \"me\": true,\n  \"might\": true,\n  \"most\": true,\n  \"must\": true,\n  \"my\": true,\n  \"neither\": true,\n  \"no\": true,\n  \"nor\": true,\n  \"not\": true,\n  \"of\": true,\n  \"off\": true,\n  \"often\": true,\n  \"on\": true,\n  \"only\": true,\n  \"or\": true,\n  \"other\": true,\n  \"our\": true,\n  \"own\": true,\n  \"rather\": true,\n  \"said\": true,\n  \"say\": true,\n  \"says\": true,\n  \"she\": true,\n  \"should\": true,\n  \"since\": true,\n  \"so\": true,\n  \"some\": true,\n  \"than\": true,\n  \"that\": true,\n  \"the\": true,\n  \"their\": true,\n  \"them\": true,\n  \"then\": true,\n  \"there\": true,\n  \"these\": true,\n  \"they\": true,\n  \"this\": true,\n  \"tis\": true,\n  \"to\": true,\n  \"too\": true,\n  \"twas\": true,\n  \"us\": true,\n  \"wants\": true,\n  \"was\": true,\n  \"we\": true,\n  \"were\": true,\n  \"what\": true,\n  \"when\": true,\n  \"where\": true,\n  \"which\": true,\n  \"while\": true,\n  \"who\": true,\n  \"whom\": true,\n  \"why\": true,\n  \"will\": true,\n  \"with\": true,\n  \"would\": true,\n  \"yet\": true,\n  \"you\": true,\n  \"your\": true\n};\n\nelasticlunr.stopWordFilter.stopWords = elasticlunr.defaultStopWords;\n\nelasticlunr.Pipeline.registerFunction(elasticlunr.stopWordFilter, 'stopWordFilter');\n/*!\n * elasticlunr.trimmer\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n */\n\n/**\n * elasticlunr.trimmer is a pipeline function for trimming non word\n * characters from the begining and end of tokens before they\n * enter the index.\n *\n * This implementation may not work correctly for non latin\n * characters and should either be removed or adapted for use\n * with languages with non-latin characters.\n *\n * @module\n * @param {String} token The token to pass through the filter\n * @return {String}\n * @see elasticlunr.Pipeline\n */\nelasticlunr.trimmer = function (token) {\n  if (token === null || token === undefined) {\n    throw new Error('token should not be undefined');\n  }\n\n  return token\n    .replace(/^\\W+/, '')\n    .replace(/\\W+$/, '');\n};\n\nelasticlunr.Pipeline.registerFunction(elasticlunr.trimmer, 'trimmer');\n/*!\n * elasticlunr.InvertedIndex\n * Copyright (C) 2016 Wei Song\n * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt\n */\n\n/**\n * elasticlunr.InvertedIndex is used for efficiently storing and\n * lookup of documents that contain a given token.\n *\n * @constructor\n */\nelasticlunr.InvertedIndex = function () {\n  this.root = { docs: {}, df: 0 };\n};\n\n/**\n * Loads a previously serialised inverted index.\n *\n * @param {Object} serialisedData The serialised inverted index to load.\n * @return {elasticlunr.InvertedIndex}\n */\nelasticlunr.InvertedIndex.load = function (serialisedData) {\n  var idx = new this;\n  idx.root = serialisedData.root;\n\n  return idx;\n};\n\n/**\n * Adds a {token: tokenInfo} pair to the inverted index.\n * If the token already exist, then update the tokenInfo.\n *\n * tokenInfo format: { ref: 1, tf: 2}\n * tokenInfor should contains the document's ref and the tf(token frequency) of that token in\n * the document.\n *\n * By default this function starts at the root of the current inverted index, however\n * it can start at any node of the inverted index if required.\n *\n * @param {String} token \n * @param {Object} tokenInfo format: { ref: 1, tf: 2}\n * @param {Object} root An optional node at which to start looking for the\n * correct place to enter the doc, by default the root of this elasticlunr.InvertedIndex\n * is used.\n * @memberOf InvertedIndex\n */\nelasticlunr.InvertedIndex.prototype.addToken = function (token, tokenInfo, root) {\n  var root = root || this.root,\n      idx = 0;\n\n  while (idx <= token.length - 1) {\n    var key = token[idx];\n\n    if (!(key in root)) root[key] = {docs: {}, df: 0};\n    idx += 1;\n    root = root[key];\n  }\n\n  var docRef = tokenInfo.ref;\n  if (!root.docs[docRef]) {\n    // if this doc not exist, then add this doc\n    root.docs[docRef] = {tf: tokenInfo.tf};\n    root.df += 1;\n  } else {\n    // if this doc already exist, then update tokenInfo\n    root.docs[docRef] = {tf: tokenInfo.tf};\n  }\n};\n\n/**\n * Checks whether a token is in this elasticlunr.InvertedIndex.\n * \n *\n * @param {String} token The token to be checked\n * @return {Boolean}\n * @memberOf InvertedIndex\n */\nelasticlunr.InvertedIndex.prototype.hasToken = function (token) {\n  if (!token) return false;\n\n  var node = this.root;\n\n  for (var i = 0; i < token.length; i++) {\n    if (!node[token[i]]) return false;\n    node = node[token[i]];\n  }\n\n  return true;\n};\n\n/**\n * Retrieve a node from the inverted index for a given token.\n * If token not found in this InvertedIndex, return null.\n * \n *\n * @param {String} token The token to get the node for.\n * @return {Object}\n * @see InvertedIndex.prototype.get\n * @memberOf InvertedIndex\n */\nelasticlunr.InvertedIndex.prototype.getNode = function (token) {\n  if (!token) return null;\n\n  var node = this.root;\n\n  for (var i = 0; i < token.length; i++) {\n    if (!node[token[i]]) return null;\n    node = node[token[i]];\n  }\n\n  return node;\n};\n\n/**\n * Retrieve the documents of a given token.\n * If token not found, return {}.\n *\n *\n * @param {String} token The token to get the documents for.\n * @return {Object}\n * @memberOf InvertedIndex\n */\nelasticlunr.InvertedIndex.prototype.getDocs = function (token) {\n  var node = this.getNode(token);\n  if (node == null) {\n    return {};\n  }\n\n  return node.docs;\n};\n\n/**\n * Retrieve term frequency of given token in given docRef.\n * If token or docRef not found, return 0.\n *\n *\n * @param {String} token The token to get the documents for.\n * @param {String|Integer} docRef\n * @return {Integer}\n * @memberOf InvertedIndex\n */\nelasticlunr.InvertedIndex.prototype.getTermFrequency = function (token, docRef) {\n  var node = this.getNode(token);\n\n  if (node == null) {\n    return 0;\n  }\n\n  if (!(docRef in node.docs)) {\n    return 0;\n  }\n\n  return node.docs[docRef].tf;\n};\n\n/**\n * Retrieve the document frequency of given token.\n * If token not found, return 0.\n *\n *\n * @param {String} token The token to get the documents for.\n * @return {Object}\n * @memberOf InvertedIndex\n */\nelasticlunr.InvertedIndex.prototype.getDocFreq = function (token) {\n  var node = this.getNode(token);\n\n  if (node == null) {\n    return 0;\n  }\n\n  return node.df;\n};\n\n/**\n * Remove the document identified by document's ref from the token in the inverted index.\n *\n *\n * @param {String} token Remove the document from which token.\n * @param {String} ref The ref of the document to remove from given token.\n * @memberOf InvertedIndex\n */\nelasticlunr.InvertedIndex.prototype.removeToken = function (token, ref) {\n  if (!token) return;\n  var node = this.getNode(token);\n\n  if (node == null) return;\n\n  if (ref in node.docs) {\n    delete node.docs[ref];\n    node.df -= 1;\n  }\n};\n\n/**\n * Find all the possible suffixes of given token using tokens currently in the inverted index.\n * If token not found, return empty Array.\n *\n * @param {String} token The token to expand.\n * @return {Array}\n * @memberOf InvertedIndex\n */\nelasticlunr.InvertedIndex.prototype.expandToken = function (token, memo, root) {\n  if (token == null || token == '') return [];\n  var memo = memo || [];\n\n  if (root == void 0) {\n    root = this.getNode(token);\n    if (root == null) return memo;\n  }\n\n  if (root.df > 0) memo.push(token);\n\n  for (var key in root) {\n    if (key === 'docs') continue;\n    if (key === 'df') continue;\n    this.expandToken(token + key, memo, root[key]);\n  }\n\n  return memo;\n};\n\n/**\n * Returns a representation of the inverted index ready for serialisation.\n *\n * @return {Object}\n * @memberOf InvertedIndex\n */\nelasticlunr.InvertedIndex.prototype.toJSON = function () {\n  return {\n    root: this.root\n  };\n};\n\n/*!\n * elasticlunr.Configuration\n * Copyright (C) 2016 Wei Song\n */\n \n /** \n  * elasticlunr.Configuration is used to analyze the user search configuration.\n  * \n  * By elasticlunr.Configuration user could set query-time boosting, boolean model in each field.\n  * \n  * Currently configuration supports:\n  * 1. query-time boosting, user could set how to boost each field.\n  * 2. boolean model chosing, user could choose which boolean model to use for each field.\n  * 3. token expandation, user could set token expand to True to improve Recall. Default is False.\n  * \n  * Query time boosting must be configured by field category, \"boolean\" model could be configured \n  * by both field category or globally as the following example. Field configuration for \"boolean\"\n  * will overwrite global configuration.\n  * Token expand could be configured both by field category or golbally. Local field configuration will\n  * overwrite global configuration.\n  * \n  * configuration example:\n  * {\n  *   fields:{ \n  *     title: {boost: 2},\n  *     body: {boost: 1}\n  *   },\n  *   bool: \"OR\"\n  * }\n  * \n  * \"bool\" field configuation overwrite global configuation example:\n  * {\n  *   fields:{ \n  *     title: {boost: 2, bool: \"AND\"},\n  *     body: {boost: 1}\n  *   },\n  *   bool: \"OR\"\n  * }\n  * \n  * \"expand\" example:\n  * {\n  *   fields:{ \n  *     title: {boost: 2, bool: \"AND\"},\n  *     body: {boost: 1}\n  *   },\n  *   bool: \"OR\",\n  *   expand: true\n  * }\n  * \n  * \"expand\" example for field category:\n  * {\n  *   fields:{ \n  *     title: {boost: 2, bool: \"AND\", expand: true},\n  *     body: {boost: 1}\n  *   },\n  *   bool: \"OR\"\n  * }\n  * \n  * setting the boost to 0 ignores the field (this will only search the title):\n  * {\n  *   fields:{\n  *     title: {boost: 1},\n  *     body: {boost: 0}\n  *   }\n  * }\n  *\n  * then, user could search with configuration to do query-time boosting.\n  * idx.search('oracle database', {fields: {title: {boost: 2}, body: {boost: 1}}});\n  * \n  * \n  * @constructor\n  * \n  * @param {String} config user configuration\n  * @param {Array} fields fields of index instance\n  * @module\n  */\nelasticlunr.Configuration = function (config, fields) {\n  var config = config || '';\n\n  if (fields == undefined || fields == null) {\n    throw new Error('fields should not be null');\n  }\n\n  this.config = {};\n\n  var userConfig;\n  try {\n    userConfig = JSON.parse(config);\n    this.buildUserConfig(userConfig, fields);\n  } catch (error) {\n    elasticlunr.utils.warn('user configuration parse failed, will use default configuration');\n    this.buildDefaultConfig(fields);\n  }\n};\n\n/**\n * Build default search configuration.\n * \n * @param {Array} fields fields of index instance\n */\nelasticlunr.Configuration.prototype.buildDefaultConfig = function (fields) {\n  this.reset();\n  fields.forEach(function (field) {\n    this.config[field] = {\n      boost: 1,\n      bool: \"OR\",\n      expand: false\n    };\n  }, this);\n};\n\n/**\n * Build user configuration.\n * \n * @param {JSON} config User JSON configuratoin\n * @param {Array} fields fields of index instance\n */\nelasticlunr.Configuration.prototype.buildUserConfig = function (config, fields) {\n  var global_bool = \"OR\";\n  var global_expand = false;\n\n  this.reset();\n  if ('bool' in config) {\n    global_bool = config['bool'] || global_bool;\n  }\n\n  if ('expand' in config) {\n    global_expand = config['expand'] || global_expand;\n  }\n\n  if ('fields' in config) {\n    for (var field in config['fields']) {\n      if (fields.indexOf(field) > -1) {\n        var field_config = config['fields'][field];\n        var field_expand = global_expand;\n        if (field_config.expand != undefined) {\n          field_expand = field_config.expand;\n        }\n\n        this.config[field] = {\n          boost: (field_config.boost || field_config.boost === 0) ? field_config.boost : 1,\n          bool: field_config.bool || global_bool,\n          expand: field_expand\n        };\n      } else {\n        elasticlunr.utils.warn('field name in user configuration not found in index instance fields');\n      }\n    }\n  } else {\n    this.addAllFields2UserConfig(global_bool, global_expand, fields);\n  }\n};\n\n/**\n * Add all fields to user search configuration.\n * \n * @param {String} bool Boolean model\n * @param {String} expand Expand model\n * @param {Array} fields fields of index instance\n */\nelasticlunr.Configuration.prototype.addAllFields2UserConfig = function (bool, expand, fields) {\n  fields.forEach(function (field) {\n    this.config[field] = {\n      boost: 1,\n      bool: bool,\n      expand: expand\n    };\n  }, this);\n};\n\n/**\n * get current user configuration\n */\nelasticlunr.Configuration.prototype.get = function () {\n  return this.config;\n};\n\n/**\n * reset user search configuration.\n */\nelasticlunr.Configuration.prototype.reset = function () {\n  this.config = {};\n};\n/**\n * sorted_set.js is added only to make elasticlunr.js compatible with lunr-languages.\n * if elasticlunr.js support different languages by default, this will make elasticlunr.js\n * much bigger that not good for browser usage.\n *\n */\n\n\n/*!\n * lunr.SortedSet\n * Copyright (C) 2016 Oliver Nightingale\n */\n\n/**\n * lunr.SortedSets are used to maintain an array of uniq values in a sorted\n * order.\n *\n * @constructor\n */\nlunr.SortedSet = function () {\n  this.length = 0\n  this.elements = []\n}\n\n/**\n * Loads a previously serialised sorted set.\n *\n * @param {Array} serialisedData The serialised set to load.\n * @returns {lunr.SortedSet}\n * @memberOf SortedSet\n */\nlunr.SortedSet.load = function (serialisedData) {\n  var set = new this\n\n  set.elements = serialisedData\n  set.length = serialisedData.length\n\n  return set\n}\n\n/**\n * Inserts new items into the set in the correct position to maintain the\n * order.\n *\n * @param {Object} The objects to add to this set.\n * @memberOf SortedSet\n */\nlunr.SortedSet.prototype.add = function () {\n  var i, element\n\n  for (i = 0; i < arguments.length; i++) {\n    element = arguments[i]\n    if (~this.indexOf(element)) continue\n    this.elements.splice(this.locationFor(element), 0, element)\n  }\n\n  this.length = this.elements.length\n}\n\n/**\n * Converts this sorted set into an array.\n *\n * @returns {Array}\n * @memberOf SortedSet\n */\nlunr.SortedSet.prototype.toArray = function () {\n  return this.elements.slice()\n}\n\n/**\n * Creates a new array with the results of calling a provided function on every\n * element in this sorted set.\n *\n * Delegates to Array.prototype.map and has the same signature.\n *\n * @param {Function} fn The function that is called on each element of the\n * set.\n * @param {Object} ctx An optional object that can be used as the context\n * for the function fn.\n * @returns {Array}\n * @memberOf SortedSet\n */\nlunr.SortedSet.prototype.map = function (fn, ctx) {\n  return this.elements.map(fn, ctx)\n}\n\n/**\n * Executes a provided function once per sorted set element.\n *\n * Delegates to Array.prototype.forEach and has the same signature.\n *\n * @param {Function} fn The function that is called on each element of the\n * set.\n * @param {Object} ctx An optional object that can be used as the context\n * @memberOf SortedSet\n * for the function fn.\n */\nlunr.SortedSet.prototype.forEach = function (fn, ctx) {\n  return this.elements.forEach(fn, ctx)\n}\n\n/**\n * Returns the index at which a given element can be found in the\n * sorted set, or -1 if it is not present.\n *\n * @param {Object} elem The object to locate in the sorted set.\n * @returns {Number}\n * @memberOf SortedSet\n */\nlunr.SortedSet.prototype.indexOf = function (elem) {\n  var start = 0,\n      end = this.elements.length,\n      sectionLength = end - start,\n      pivot = start + Math.floor(sectionLength / 2),\n      pivotElem = this.elements[pivot]\n\n  while (sectionLength > 1) {\n    if (pivotElem === elem) return pivot\n\n    if (pivotElem < elem) start = pivot\n    if (pivotElem > elem) end = pivot\n\n    sectionLength = end - start\n    pivot = start + Math.floor(sectionLength / 2)\n    pivotElem = this.elements[pivot]\n  }\n\n  if (pivotElem === elem) return pivot\n\n  return -1\n}\n\n/**\n * Returns the position within the sorted set that an element should be\n * inserted at to maintain the current order of the set.\n *\n * This function assumes that the element to search for does not already exist\n * in the sorted set.\n *\n * @param {Object} elem The elem to find the position for in the set\n * @returns {Number}\n * @memberOf SortedSet\n */\nlunr.SortedSet.prototype.locationFor = function (elem) {\n  var start = 0,\n      end = this.elements.length,\n      sectionLength = end - start,\n      pivot = start + Math.floor(sectionLength / 2),\n      pivotElem = this.elements[pivot]\n\n  while (sectionLength > 1) {\n    if (pivotElem < elem) start = pivot\n    if (pivotElem > elem) end = pivot\n\n    sectionLength = end - start\n    pivot = start + Math.floor(sectionLength / 2)\n    pivotElem = this.elements[pivot]\n  }\n\n  if (pivotElem > elem) return pivot\n  if (pivotElem < elem) return pivot + 1\n}\n\n/**\n * Creates a new lunr.SortedSet that contains the elements in the intersection\n * of this set and the passed set.\n *\n * @param {lunr.SortedSet} otherSet The set to intersect with this set.\n * @returns {lunr.SortedSet}\n * @memberOf SortedSet\n */\nlunr.SortedSet.prototype.intersect = function (otherSet) {\n  var intersectSet = new lunr.SortedSet,\n      i = 0, j = 0,\n      a_len = this.length, b_len = otherSet.length,\n      a = this.elements, b = otherSet.elements\n\n  while (true) {\n    if (i > a_len - 1 || j > b_len - 1) break\n\n    if (a[i] === b[j]) {\n      intersectSet.add(a[i])\n      i++, j++\n      continue\n    }\n\n    if (a[i] < b[j]) {\n      i++\n      continue\n    }\n\n    if (a[i] > b[j]) {\n      j++\n      continue\n    }\n  };\n\n  return intersectSet\n}\n\n/**\n * Makes a copy of this set\n *\n * @returns {lunr.SortedSet}\n * @memberOf SortedSet\n */\nlunr.SortedSet.prototype.clone = function () {\n  var clone = new lunr.SortedSet\n\n  clone.elements = this.toArray()\n  clone.length = clone.elements.length\n\n  return clone\n}\n\n/**\n * Creates a new lunr.SortedSet that contains the elements in the union\n * of this set and the passed set.\n *\n * @param {lunr.SortedSet} otherSet The set to union with this set.\n * @returns {lunr.SortedSet}\n * @memberOf SortedSet\n */\nlunr.SortedSet.prototype.union = function (otherSet) {\n  var longSet, shortSet, unionSet\n\n  if (this.length >= otherSet.length) {\n    longSet = this, shortSet = otherSet\n  } else {\n    longSet = otherSet, shortSet = this\n  }\n\n  unionSet = longSet.clone()\n\n  for(var i = 0, shortSetElements = shortSet.toArray(); i < shortSetElements.length; i++){\n    unionSet.add(shortSetElements[i])\n  }\n\n  return unionSet\n}\n\n/**\n * Returns a representation of the sorted set ready for serialisation.\n *\n * @returns {Array}\n * @memberOf SortedSet\n */\nlunr.SortedSet.prototype.toJSON = function () {\n  return this.toArray()\n}\n  /**\n   * export the module via AMD, CommonJS or as a browser global\n   * Export code from https://github.com/umdjs/umd/blob/master/returnExports.js\n   */\n  ;(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      // AMD. Register as an anonymous module.\n      define(factory)\n    } else if (typeof exports === 'object') {\n      /**\n       * Node. Does not work with strict CommonJS, but\n       * only CommonJS-like enviroments that support module.exports,\n       * like Node.\n       */\n      module.exports = factory()\n    } else {\n      // Browser globals (root is window)\n      root.elasticlunr = factory()\n    }\n  }(this, function () {\n    /**\n     * Just return a value to define the module export.\n     * This example returns an object, but the module\n     * can return a function as the exported value.\n     */\n    return elasticlunr\n  }))\n})();\n","gtu.ready(function () {\n    'use strict';\n    search();\n    buttons();\n    forms();\n});\n\nfunction search() {\n    'use strict';\n    if (\n        typeof gh_search_key == 'undefined' ||\n        gh_search_key === '' ||\n        typeof gh_search_migration == 'undefined'\n    )\n        return;\n\n    var searchInput = gtu('.search-field');\n    var searchButton = gtu('.search-button');\n    var searchResult = gtu('.search-result');\n\n    var url =\n        siteUrl +\n        '/ghost/api/v3/content/posts/?key=' +\n        gh_search_key +\n        '&limit=all&fields=id,title,excerpt,url,updated_at,visibility&order=updated_at%20desc&formats=plaintext';\n    var indexDump = JSON.parse(localStorage.getItem('spin_search_index'));\n    var index;\n\n    elasticlunr.clearStopWords();\n\n    localStorage.removeItem('spin_index');\n    localStorage.removeItem('spin_last');\n\n    function update(data) {\n        data.posts.forEach(function (post) {\n            index.addDoc(post);\n        });\n\n        localStorage.setItem('spin_search_index', JSON.stringify(index));\n        localStorage.setItem('spin_search_last', data.posts[0].updated_at);\n    }\n\n    if (\n        !indexDump ||\n        gh_search_migration !== localStorage.getItem('spin_search_migration')\n    ) {\n        fetch(url)\n            .then(function (data) {\n                if (data.posts.length > 0) {\n                    index = elasticlunr(function () {\n                        this.addField('title');\n                        this.addField('plaintext');\n                        this.setRef('id');\n                    });\n\n                    update(data);\n\n                    localStorage.setItem(\n                        'spin_search_migration',\n                        gh_search_migration\n                    );\n                }\n            });\n    } else {\n        index = elasticlunr.Index.load(indexDump);\n\n        fetch(url +\n            \"&filter=updated_at:>'\" +\n            localStorage\n                .getItem('spin_search_last')\n                .replace(/\\..*/, '')\n                .replace(/T/, ' ') +\n            \"'\")\n            .then(function (data) {\n                if (data.posts.length > 0) {\n                    update(data);\n                }\n            });\n    }\n\n    searchInput.on('keyup', function (e) {\n        var result = index.search(e.target.value, {expand: true});\n        var output = '';\n\n        result.forEach(function (post) {\n            output +=\n                '<div class=\"search-result-row\">' +\n                '<a class=\"search-result-row-link\" href=\"' +\n                post.doc.url +\n                '\">' +\n                '<div class=\"search-result-row-title\">' +\n                post.doc.title +\n                '</div><div class=\"search-result-row-excerpt\">' +\n                post.doc.excerpt +\n                '</div></a>' +\n                '</div>';\n        });\n\n        searchResult.html(output);\n\n        if (e.target.value.length > 0) {\n            searchButton.addClass('search-button-clear');\n        } else {\n            searchButton.removeClass('search-button-clear');\n        }\n    });\n\n    gtu('.search-form').on('submit', function (e) {\n        e.preventDefault();\n    });\n\n    searchButton.on('click', function (event) {\n        if (event.target.classList.contains('search-button-clear')) {\n            searchInput.val('').focus().keyup();\n        }\n    });\n\n    document.addEventListener('keyup', function (e) {\n        if (e.keyCode === 27) {\n            searchInput.val('').focus().keyup();\n        }\n    });\n}\n\nfunction addStyleElement(css) {\n    var style = document.createElement('style');\n    if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n    } else {\n        style.appendChild(document.createTextNode(css));\n    }\n\n    document.getElementsByTagName('head')[0].appendChild(style);\n}\n\nfunction squashCss(css) {\n    return css.trim().replace(/\\s+/g, ' ');\n}\n\nfunction gradientBackground(color, options) {\n    options.enableGradients = options.enableGradients || false;\n\n    let css = `\n    background-color: ${color};\n    `\n    if (options.enableGradients) {\n        css += `\n        background-image: var(--bs-gradient);\n        `\n    }\n    return css;\n}\n\nfunction btnBoxShadow(options) {\n    options = options || {};\n    options.enableShadows = options.enableShadows || false;\n    options.btnBoxShadow = options.btnBoxShadow || 'inset 0 1px 0 #ffffff, 0 1px 1px #000000';\n\n    // FIXME: user is responsible for using 'none' correctly.\n    if (options.enableShadows) {\n        return `box-shadow: ${options.btnBoxShadow}`\n    }\n    return '';\n}\n\nfunction focusBoxShadow(shadow, color, border, options) {\n    options = options || {};\n    options.btnFocusWidth = options.btnFocusWidth || '.25rem';\n\n    if (options.enableShadows) {\n        return `box-shadow: ${shadow}  0 0 0 ${options.btnFocusWidth} ${rgba(mix(color, border, 15), .5)}`;\n    } else {\n        return `box-shadow: 0 0 0 ${options.btnFocusWidth}  ${rgba(mix(color, border, 15), .5)}`;\n    }\n}\n\nfunction removeGradientIfEnabled(options) {\n    options = options || {};\n\n    if (options.enableGradients) {\n        return `background-image: none;`\n    }\n    return '';\n}\n\nfunction buttonVariant(\n    name,\n    background,\n    border,\n    options\n) {\n    if (name.charAt(0) !== '.') {\n        name = '.' + name;\n    }\n\n    /* config */\n    options = options || {};\n    options.colorContrastLight = options.colorContrastLight || '#ffffff';\n    options.colorContrastDark = options.colorContrastDark || '#000000';\n    options.minContrastRatio = options.minContrastRatio || 4.5;\n    options.btnHoverBgShadeAmount = options.btnHoverBgShadeAmount || 15;\n    options.btnHoverBgTintAmount = options.btnHoverBgTintAmount || 15;\n    options.btnHoverBorderShadeAmount = options.btnHoverBorderShadeAmount || 20;\n    options.btnHoverBorderTintAmount = options.btnHoverBorderTintAmount || 10;\n    options.btnActiveBgShadeAmount = options.btnHoverBgShadeAmount || 20;\n    options.btnActiveBgTintAmount = options.btnActiveBgTintAmount || 20;\n    options.btnActiveBorderShadeAmount = options.btnActiveBorderShadeAmount || 25;\n    options.btnActiveBorderTintAmount = options.btnActiveBorderTintAmount || 10;\n    options.btnActiveBoxShadow = options.btnActiveBoxShadow || `inset 0 3px 5px ${rgba('#000000', .125)}`;\n\n    options.enableGradients = options.enableGradients || false;\n    options.enableShadows = options.enableShadows || false;\n\n    options.color = options.color || colorContrast(background, options);\n\n    if (!options.hoverBackground) {\n        if (options.color === options.colorContrastLight) {\n            options.hoverBackground = shade(background, options.btnHoverBgShadeAmount);\n        } else {\n            options.hoverBackground = tint(background, options.btnHoverBgTintAmount);\n        }\n    }\n\n    if (!options.hoverBorder) {\n        if (options.color === options.colorContrastLight) {\n            options.hoverBorder = shade(border, options.btnHoverBorderShadeAmount);\n        } else {\n            options.hoverBorder = tint(border, options.btnHoverBgTintAmount);\n        }\n    }\n    options.hoverColor = options.hoverColor || colorContrast(options.hoverBackground, options);\n\n    if (!options.activeBackground) {\n        if (options.color === options.colorContrastLight) {\n            options.activeBackground = shade(background, options.btnActiveBgShadeAmount);\n        } else {\n            options.activeBackground = tint(background, options.btnActiveBorderTintAmount);\n        }\n    }\n\n    if (!options.activeBorder) {\n        if (options.color === options.colorContrastLight) {\n            options.activeBorder = shade(border, options.btnActiveBorderShadeAmount);\n        } else {\n            options.activeBorder = tint(border, options.btnActiveBorderTintAmount);\n        }\n    }\n\n    options.activeColor = options.activeColor || colorContrast(options.activeBackground, options);\n    options.disabledBackground = background;\n    options.disabledBorder = border;\n    options.disabledColor = colorContrast(options.disabledBackground);\n\n    //---\n    let css = `\n    ${name} {\n        color: ${options.color};\n        ${gradientBackground(background, options)}\n        border-color: ${border};\n        ${btnBoxShadow(options)}\n    }\n    \n    ${name}:hover {\n        color: ${options.hoverColor};\n        ${gradientBackground(options.hoverBackground, options)};\n        border-color: ${options.hoverBorder};\n    }\n\n    .btn-check:focus + ${name},\n    ${name}:focus {\n        color: ${options.hoverColor};\n        ${gradientBackground(options.hoverBackground, options)};\n        border-color: ${options.hoverBorder};\n        ${focusBoxShadow(options.btnBoxShadow, options.color, border, options)};\n    }\n\n    .btn-check:checked + ${name},\n    .btn-check:active + ${name},\n    ${name}:active,\n    ${name}.active,\n    .show > ${name}.dropdown-toggle {\n        color: ${options.activeColor};\n        background-color: ${options.activeBackground};\n        ${removeGradientIfEnabled(options)}\n        border-color: ${options.activeBorder};\n    }\n\n    ${name}:focus {\n        ${focusBoxShadow(options.activeBoxShadow, options.color, border, options)};\n    }\n\n    ${name}:disabled,\n    ${name}.disabled {\n        color: ${options.disabledColor};\n        background-color: ${options.disabledBackground};\n        ${removeGradientIfEnabled(options)}\n        border-color: ${options.disabledBorder};\n    }`;\n\n    //---\n    addStyleElement(squashCss(css));\n}\n\nfunction buttons() {\n    var rootStyle = getComputedStyle(document.querySelector(':root'));\n    var accentColor = rootStyle.getPropertyValue('--ghost-accent-color');\n    buttonVariant('.btn-accent', accentColor, accentColor, {\n        color: '#ffffff',\n        hoverColor: '#ffffff'\n    });\n}\n\nfunction forms() {\n    /*\n     * Enable forms that have a data-form-type attribute set to 'contact' by:\n     * - append a hidden form element containing the customer api key (if not present).\n     * - set the method attribute to 'POST'\n     * - set the action to the /form endpoint\n     * - set the redirect location (if not already present)\n     */\n    var formElements = document.querySelectorAll('form[data-form-type=\"contact\"]');\n    if (formElements.length > 0) {\n        for (var i = 0; i < formElements.length; i++) {\n            var formElement = formElements[i];\n\n            if (!formElement.querySelector('input[name=\"api_key\"]')) {\n                var hiddenInputElement = document.createElement('input');\n                hiddenInputElement.setAttribute('hidden', 'true');\n                hiddenInputElement.setAttribute('name', 'api_key');\n                hiddenInputElement.setAttribute('value', 'API_KEY');\n                formElement.appendChild(hiddenInputElement);\n            }\n\n            if (!formElement.querySelector('input[name=\"location\"]')) {\n                var locationInputElement = document.createElement('input');\n                locationInputElement.setAttribute('hidden', 'true');\n                locationInputElement.setAttribute('name', 'location');\n                locationInputElement.setAttribute('value', './#thank-you');\n                formElement.appendChild(locationInputElement);\n            }\n\n            formElement.setAttribute('method', 'POST');\n            formElement.setAttribute('action', 'https://api.mindspun.com/form');\n        }\n    }\n}\n"]}