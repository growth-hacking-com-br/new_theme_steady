function _color(e) {
    return "#" === (e = e.trim()).charAt(0) ? e.substring(1) : e
}

function red(e) {
    return parseInt(_color(e).substring(0, 2), 16)
}

function green(e) {
    return parseInt(_color(e).substring(2, 4), 16)
}

function blue(e) {
    return parseInt(_color(e).substring(4, 6), 16)
}

function rgba(e, t) {
    return t *= 100, `rgb(${red(e)} ${green(e)} ${blue(e)} / ${t}%)`
}

function mix(e, t, o) {
    function n(e) {
        return parseInt(e, 16)
    }
    e = _color(e), t = _color(t), o = void 0 !== o ? o : 50;
    for (var r = "#", i = 0; i <= 5; i += 2) {
        for (var s = n(e.substr(i, 2)), a = n(t.substr(i, 2)), u = Math.floor(a + o / 100 * (s - a)).toString(16); u.length < 2;) u = "0" + u;
        r += u
    }
    return r
}

function tint(e, t) {
    return mix("ffffff", e, t)
}

function shade(e, t) {
    return mix("000000", e, t)
}

function opaque(e, t) {
    return mix(t, e, 100 * opacity(t))
}! function () {
    function t(e) {
        return this.elements = document.querySelectorAll(e), this
    }
    t.prototype.each = function (e) {
        return this.elements.forEach(e), this
    }, t.prototype.addClass = function (t) {
        return this.each(function (e) {
            e.classList.add(t)
        })
    }, t.prototype.removeClass = function (t) {
        return this.each(function (e) {
            t ? e.classList.add(t) : e.className = ""
        })
    }, t.prototype.val = function (t) {
        return this.each(function (e) {
            e.value = t
        })
    }, t.prototype.on = function (t, o, n) {
        return this.each(function (e) {
            e.addEventListener(t, o, n)
        })
    }, t.prototype.click = function (e, t) {
        return this.on("click", e, t)
    }, window.gtu = function (e) {
        return new t(e)
    }, gtu.ready = function (e) {
        "complete" === document.readyState || "interactive" === document.readyState ? setTimeout(e, 1) : document.addEventListener("DOMContentLoaded", e)
    }, gtu.getParameterByName = function (e, t) {
        t = t || window.location.href, e = e.replace(/[[\]]/g, "\\$&");
        t = new RegExp("[?&]" + e + "(=([^&#]*)|&|#|$)").exec(t);
        return t ? t[2] ? decodeURIComponent(t[2].replace(/\+/g, " ")) : "" : null
    }, gtu.addClass = function (e, t) {
        document.querySelectorAll(e).forEach(function (e) {
            e.classList.add(t)
        })
    }
}(), gtu.ready(function () {
        var e = gtu.getParameterByName("action"),
            t = gtu.getParameterByName("success");
        "subscribe" !== e || null !== t && "true" !== t || gtu("body").addClass("subscribe-success"), "subscribe" === e && "false" === t && gtu("body").addClass("subscribe-failure"), gtu(".subscribe-notification .subscribe-close-button").click(function () {
            gtu(".subscribe-notification").addClass("close")
        }), gtu(".subscribe-button").click(function () {
            gtu(".subscribe-overlay form").removeClass(), gtu(".subscribe-email").val("")
        })
    }),
    function () {
        function d(e) {
            var t = new d.Index;
            return t.pipeline.add(d.trimmer, d.stopWordFilter, d.stemmer), e && e.call(t, t), t
        }
        var t, c, l, h, f, p, g, m, v, b, y, S, x, w, C, k, _, I, B, $, A, E, F, e, o;
        d.version = "0.9.5", ((lunr = d).utils = {}).warn = (t = this, function (e) {
            t.console && console.warn && console.warn(e)
        }), d.utils.toString = function (e) {
            return null == e ? "" : e.toString()
        }, (d.EventEmitter = function () {
            this.events = {}
        }).prototype.addListener = function () {
            var e = Array.prototype.slice.call(arguments),
                t = e.pop(),
                e = e;
            if ("function" != typeof t) throw new TypeError("last argument must be a function");
            e.forEach(function (e) {
                this.hasHandler(e) || (this.events[e] = []), this.events[e].push(t)
            }, this)
        }, d.EventEmitter.prototype.removeListener = function (e, t) {
            !this.hasHandler(e) || -1 !== (t = this.events[e].indexOf(t)) && (this.events[e].splice(t, 1), 0 == this.events[e].length && delete this.events[e])
        }, d.EventEmitter.prototype.emit = function (e) {
            var t;
            this.hasHandler(e) && (t = Array.prototype.slice.call(arguments, 1), this.events[e].forEach(function (e) {
                e.apply(void 0, t)
            }, this))
        }, d.EventEmitter.prototype.hasHandler = function (e) {
            return e in this.events
        }, (d.tokenizer = function (e) {
            if (!arguments.length || null == e) return [];
            if (Array.isArray(e)) {
                var t = (t = e.filter(function (e) {
                        return null != e
                    })).map(function (e) {
                        return d.utils.toString(e).toLowerCase()
                    }),
                    o = [];
                return t.forEach(function (e) {
                    e = e.split(d.tokenizer.seperator);
                    o = o.concat(e)
                }, this), o
            }
            return e.toString().trim().toLowerCase().split(d.tokenizer.seperator)
        }).defaultSeperator = /[\s\-]+/, d.tokenizer.seperator = d.tokenizer.defaultSeperator, d.tokenizer.setSeperator = function (e) {
            null != e && "object" == typeof e && (d.tokenizer.seperator = e)
        }, d.tokenizer.resetSeperator = function () {
            d.tokenizer.seperator = d.tokenizer.defaultSeperator
        }, d.tokenizer.getSeperator = function () {
            return d.tokenizer.seperator
        }, (d.Pipeline = function () {
            this._queue = []
        }).registeredFunctions = {}, d.Pipeline.registerFunction = function (e, t) {
            t in d.Pipeline.registeredFunctions && d.utils.warn("Overwriting existing registered function: " + t), e.label = t, d.Pipeline.registeredFunctions[t] = e
        }, d.Pipeline.getRegisteredFunction = function (e) {
            return e in d.Pipeline.registeredFunctions != !0 ? null : d.Pipeline.registeredFunctions[e]
        }, d.Pipeline.warnIfFunctionNotRegistered = function (e) {
            e.label && e.label in this.registeredFunctions || d.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n", e)
        }, d.Pipeline.load = function (e) {
            var o = new d.Pipeline;
            return e.forEach(function (e) {
                var t = d.Pipeline.getRegisteredFunction(e);
                if (!t) throw new Error("Cannot load un-registered function: " + e);
                o.add(t)
            }), o
        }, d.Pipeline.prototype.add = function () {
            Array.prototype.slice.call(arguments).forEach(function (e) {
                d.Pipeline.warnIfFunctionNotRegistered(e), this._queue.push(e)
            }, this)
        }, d.Pipeline.prototype.after = function (e, t) {
            d.Pipeline.warnIfFunctionNotRegistered(t);
            e = this._queue.indexOf(e);
            if (-1 === e) throw new Error("Cannot find existingFn");
            this._queue.splice(e + 1, 0, t)
        }, d.Pipeline.prototype.before = function (e, t) {
            d.Pipeline.warnIfFunctionNotRegistered(t);
            e = this._queue.indexOf(e);
            if (-1 === e) throw new Error("Cannot find existingFn");
            this._queue.splice(e, 0, t)
        }, d.Pipeline.prototype.remove = function (e) {
            e = this._queue.indexOf(e); - 1 !== e && this._queue.splice(e, 1)
        }, d.Pipeline.prototype.run = function (e) {
            for (var t = [], o = e.length, n = this._queue.length, r = 0; r < o; r++) {
                for (var i = e[r], s = 0; s < n && null != (i = this._queue[s](i, r, e)); s++);
                null != i && t.push(i)
            }
            return t
        }, d.Pipeline.prototype.reset = function () {
            this._queue = []
        }, d.Pipeline.prototype.get = function () {
            return this._queue
        }, d.Pipeline.prototype.toJSON = function () {
            return this._queue.map(function (e) {
                return d.Pipeline.warnIfFunctionNotRegistered(e), e.label
            })
        }, (d.Index = function () {
            this._fields = [], this._ref = "id", this.pipeline = new d.Pipeline, this.documentStore = new d.DocumentStore, this.index = {}, this.eventEmitter = new d.EventEmitter, this._idfCache = {}, this.on("add", "remove", "update", function () {
                this._idfCache = {}
            }.bind(this))
        }).prototype.on = function () {
            var e = Array.prototype.slice.call(arguments);
            return this.eventEmitter.addListener.apply(this.eventEmitter, e)
        }, d.Index.prototype.off = function (e, t) {
            return this.eventEmitter.removeListener(e, t)
        }, d.Index.load = function (e) {
            e.version !== d.version && d.utils.warn("version mismatch: current " + d.version + " importing " + e.version);
            var t, o = new this;
            for (t in o._fields = e.fields, o._ref = e.ref, o.documentStore = d.DocumentStore.load(e.documentStore), o.pipeline = d.Pipeline.load(e.pipeline), o.index = {}, e.index) o.index[t] = d.InvertedIndex.load(e.index[t]);
            return o
        }, d.Index.prototype.addField = function (e) {
            return this._fields.push(e), this.index[e] = new d.InvertedIndex, this
        }, d.Index.prototype.setRef = function (e) {
            return this._ref = e, this
        }, d.Index.prototype.saveDocument = function (e) {
            return this.documentStore = new d.DocumentStore(e), this
        }, d.Index.prototype.addDoc = function (i, e) {
            var s;
            i && (e = void 0 === e || e, s = i[this._ref], this.documentStore.addDoc(s, i), this._fields.forEach(function (e) {
                var t = this.pipeline.run(d.tokenizer(i[e]));
                this.documentStore.addFieldLength(s, e, t.length);
                var o, n = {};
                for (o in t.forEach(function (e) {
                        e in n ? n[e] += 1 : n[e] = 1
                    }, this), n) {
                    var r = n[o],
                        r = Math.sqrt(r);
                    this.index[e].addToken(o, {
                        ref: s,
                        tf: r
                    })
                }
            }, this), e && this.eventEmitter.emit("add", i, this))
        }, d.Index.prototype.removeDocByRef = function (e, t) {
            e && !1 !== this.documentStore.isDocStored() && this.documentStore.hasDoc(e) && (e = this.documentStore.getDoc(e), this.removeDoc(e, !1))
        }, d.Index.prototype.removeDoc = function (e, t) {
            var o;
            e && (t = void 0 === t || t, o = e[this._ref], this.documentStore.hasDoc(o) && (this.documentStore.removeDoc(o), this._fields.forEach(function (t) {
                this.pipeline.run(d.tokenizer(e[t])).forEach(function (e) {
                    this.index[t].removeToken(e, o)
                }, this)
            }, this), t && this.eventEmitter.emit("remove", e, this)))
        }, d.Index.prototype.updateDoc = function (e, t) {
            t = void 0 === t || t;
            this.removeDocByRef(e[this._ref], !1), this.addDoc(e, !1), t && this.eventEmitter.emit("update", e, this)
        }, d.Index.prototype.idf = function (e, t) {
            var o = "@" + t + "/" + e;
            if (Object.prototype.hasOwnProperty.call(this._idfCache, o)) return this._idfCache[o];
            e = this.index[t].getDocFreq(e), e = 1 + Math.log(this.documentStore.length / (e + 1));
            return this._idfCache[o] = e
        }, d.Index.prototype.getFields = function () {
            return this._fields.slice()
        }, d.Index.prototype.search = function (e, t) {
            if (!e) return [];
            var o = null;
            null != t && (o = JSON.stringify(t));
            var n, r = new d.Configuration(o, this.getFields()).get(),
                i = this.pipeline.run(d.tokenizer(e)),
                s = {};
            for (n in r) {
                var a = this.fieldSearch(i, n, r),
                    u = r[n].boost;
                for (c in a) a[c] = a[c] * u;
                for (c in a) c in s ? s[c] += a[c] : s[c] = a[c]
            }
            var c, l = [];
            for (c in s) l.push({
                ref: c,
                score: s[c]
            });
            return l.sort(function (e, t) {
                return t.score - e.score
            }), l
        }, d.Index.prototype.fieldSearch = function (e, d, t) {
            var h = t[d].bool,
                o = t[d].expand,
                t = t[d].boost,
                f = null,
                p = {};
            if (0 !== t) return e.forEach(function (c) {
                var e = [c];
                1 == o && (e = this.index[d].expandToken(c));
                var l = {};
                e.forEach(function (e) {
                    var t = this.index[d].getDocs(e),
                        o = this.idf(e, d);
                    if (f && "AND" == h) {
                        var n, r = {};
                        for (n in f) n in t && (r[n] = t[n]);
                        t = r
                    }
                    for (n in e == c && this.fieldSearchStats(p, e, t), t) {
                        var i = this.index[d].getTermFrequency(e, n),
                            s = this.documentStore.getFieldLength(n, d),
                            a = 1,
                            u = 1,
                            u = i * o * (a = 0 != s ? 1 / Math.sqrt(s) : a) * (u = e != c ? .15 * (1 - (e.length - c.length) / e.length) : u);
                        n in l ? l[n] += u : l[n] = u
                    }
                }, this), f = this.mergeScores(f, l, h)
            }, this), f = this.coordNorm(f, p, e.length)
        }, d.Index.prototype.mergeScores = function (e, t, o) {
            if (!e) return t;
            if ("AND" == o) {
                var n = {};
                for (r in t) r in e && (n[r] = e[r] + t[r]);
                return n
            }
            for (var r in t) r in e ? e[r] += t[r] : e[r] = t[r];
            return e
        }, d.Index.prototype.fieldSearchStats = function (e, t, o) {
            for (var n in o) n in e ? e[n].push(t) : e[n] = [t]
        }, d.Index.prototype.coordNorm = function (e, t, o) {
            for (var n in e) {
                var r;
                n in t && (r = t[n].length, e[n] = e[n] * r / o)
            }
            return e
        }, d.Index.prototype.toJSON = function () {
            var t = {};
            return this._fields.forEach(function (e) {
                t[e] = this.index[e].toJSON()
            }, this), {
                version: d.version,
                fields: this._fields,
                ref: this._ref,
                documentStore: this.documentStore.toJSON(),
                index: t,
                pipeline: this.pipeline.toJSON()
            }
        }, d.Index.prototype.use = function (e) {
            var t = Array.prototype.slice.call(arguments, 1);
            t.unshift(this), e.apply(this, t)
        }, (d.DocumentStore = function (e) {
            this._save = null == e || e, this.docs = {}, this.docInfo = {}, this.length = 0
        }).load = function (e) {
            var t = new this;
            return t.length = e.length, t.docs = e.docs, t.docInfo = e.docInfo, t._save = e.save, t
        }, d.DocumentStore.prototype.isDocStored = function () {
            return this._save
        }, d.DocumentStore.prototype.addDoc = function (e, t) {
            this.hasDoc(e) || this.length++, !0 === this._save ? this.docs[e] = function (e) {
                if (null === e || "object" != typeof e) return e;
                var t, o = e.constructor();
                for (t in e) e.hasOwnProperty(t) && (o[t] = e[t]);
                return o
            }(t) : this.docs[e] = null
        }, d.DocumentStore.prototype.getDoc = function (e) {
            return !1 === this.hasDoc(e) ? null : this.docs[e]
        }, d.DocumentStore.prototype.hasDoc = function (e) {
            return e in this.docs
        }, d.DocumentStore.prototype.removeDoc = function (e) {
            this.hasDoc(e) && (delete this.docs[e], delete this.docInfo[e], this.length--)
        }, d.DocumentStore.prototype.addFieldLength = function (e, t, o) {
            null != e && 0 != this.hasDoc(e) && (this.docInfo[e] || (this.docInfo[e] = {}), this.docInfo[e][t] = o)
        }, d.DocumentStore.prototype.updateFieldLength = function (e, t, o) {
            null != e && 0 != this.hasDoc(e) && this.addFieldLength(e, t, o)
        }, d.DocumentStore.prototype.getFieldLength = function (e, t) {
            return null != e && e in this.docs && t in this.docInfo[e] ? this.docInfo[e][t] : 0
        }, d.DocumentStore.prototype.toJSON = function () {
            return {
                docs: this.docs,
                docInfo: this.docInfo,
                length: this.length,
                save: this._save
            }
        }, d.stemmer = (c = {
            ational: "ate",
            tional: "tion",
            enci: "ence",
            anci: "ance",
            izer: "ize",
            bli: "ble",
            alli: "al",
            entli: "ent",
            eli: "e",
            ousli: "ous",
            ization: "ize",
            ation: "ate",
            ator: "ate",
            alism: "al",
            iveness: "ive",
            fulness: "ful",
            ousness: "ous",
            aliti: "al",
            iviti: "ive",
            biliti: "ble",
            logi: "log"
        }, l = {
            icate: "ic",
            ative: "",
            alize: "al",
            iciti: "ic",
            ical: "ic",
            ful: "",
            ness: ""
        }, o = "[aeiouy]", e = "[^aeiou][^aeiouy]*", h = new RegExp("^([^aeiou][^aeiouy]*)?[aeiouy][aeiou]*[^aeiou][^aeiouy]*"), f = new RegExp("^([^aeiou][^aeiouy]*)?[aeiouy][aeiou]*[^aeiou][^aeiouy]*[aeiouy][aeiou]*[^aeiou][^aeiouy]*"), p = new RegExp("^([^aeiou][^aeiouy]*)?[aeiouy][aeiou]*[^aeiou][^aeiouy]*([aeiouy][aeiou]*)?$"), g = new RegExp("^([^aeiou][^aeiouy]*)?[aeiouy]"), m = /^(.+?)(ss|i)es$/, v = /^(.+?)([^s])s$/, b = /^(.+?)eed$/, y = /^(.+?)(ed|ing)$/, S = /.$/, x = /(at|bl|iz)$/, w = new RegExp("([^aeiouylsz])\\1$"), C = new RegExp("^" + e + o + "[^aeiouwxy]$"), k = /^(.+?[^aeiou])y$/, _ = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/, I = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/, B = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/, $ = /^(.+?)(s|t)(ion)$/, A = /^(.+?)e$/, E = /ll$/, F = new RegExp("^" + e + o + "[^aeiouwxy]$"), function (e) {
            var t, o, n, r, i, s, a, u;
            return e.length < 3 ? e : ("y" == (o = e.substr(0, 1)) && (e = o.toUpperCase() + e.substr(1)), a = v, (i = m).test(e) ? e = e.replace(i, "$1$2") : a.test(e) && (e = e.replace(a, "$1$2")), a = y, (i = b).test(e) ? (u = i.exec(e), (i = h).test(u[1]) && (e = e.replace(i = S, ""))) : a.test(e) && (s = (u = a.exec(e))[1], (a = g).test(s) && (e = s, n = w, r = C, (a = x).test(e) ? e += "e" : n.test(e) ? e = e.replace(i = S, "") : r.test(e) && (e += "e"))), (i = k).test(e) && (e = (s = (u = i.exec(e))[1]) + "i"), (i = _).test(e) && (s = (u = i.exec(e))[1], t = u[2], (i = h).test(s) && (e = s + c[t])), (i = I).test(e) && (s = (u = i.exec(e))[1], t = u[2], (i = h).test(s) && (e = s + l[t])), a = $, (i = B).test(e) ? (s = (u = i.exec(e))[1], (i = f).test(s) && (e = s)) : a.test(e) && (s = (u = a.exec(e))[1] + u[2], (a = f).test(s) && (e = s)), (i = A).test(e) && (s = (u = i.exec(e))[1], a = p, n = F, ((i = f).test(s) || a.test(s) && !n.test(s)) && (e = s)), a = f, (i = E).test(e) && a.test(e) && (e = e.replace(i = S, "")), "y" == o ? o.toLowerCase() + e.substr(1) : e)
        }), d.Pipeline.registerFunction(d.stemmer, "stemmer"), d.stopWordFilter = function (e) {
            if (e && !0 !== d.stopWordFilter.stopWords[e]) return e
        }, d.clearStopWords = function () {
            d.stopWordFilter.stopWords = {}
        }, d.addStopWords = function (e) {
            null != e && !1 !== Array.isArray(e) && e.forEach(function (e) {
                d.stopWordFilter.stopWords[e] = !0
            }, this)
        }, d.resetStopWords = function () {
            d.stopWordFilter.stopWords = d.defaultStopWords
        }, d.stopWordFilter.stopWords = d.defaultStopWords = {
            "": !0,
            a: !0,
            able: !0,
            about: !0,
            across: !0,
            after: !0,
            all: !0,
            almost: !0,
            also: !0,
            am: !0,
            among: !0,
            an: !0,
            and: !0,
            any: !0,
            are: !0,
            as: !0,
            at: !0,
            be: !0,
            because: !0,
            been: !0,
            but: !0,
            by: !0,
            can: !0,
            cannot: !0,
            could: !0,
            dear: !0,
            did: !0,
            do: !0,
            does: !0,
            either: !0,
            else: !0,
            ever: !0,
            every: !0,
            for: !0,
            from: !0,
            get: !0,
            got: !0,
            had: !0,
            has: !0,
            have: !0,
            he: !0,
            her: !0,
            hers: !0,
            him: !0,
            his: !0,
            how: !0,
            however: !0,
            i: !0,
            if: !0,
            in: !0,
            into: !0,
            is: !0,
            it: !0,
            its: !0,
            just: !0,
            least: !0,
            let: !0,
            like: !0,
            likely: !0,
            may: !0,
            me: !0,
            might: !0,
            most: !0,
            must: !0,
            my: !0,
            neither: !0,
            no: !0,
            nor: !0,
            not: !0,
            of: !0,
            off: !0,
            often: !0,
            on: !0,
            only: !0,
            or: !0,
            other: !0,
            our: !0,
            own: !0,
            rather: !0,
            said: !0,
            say: !0,
            says: !0,
            she: !0,
            should: !0,
            since: !0,
            so: !0,
            some: !0,
            than: !0,
            that: !0,
            the: !0,
            their: !0,
            them: !0,
            then: !0,
            there: !0,
            these: !0,
            they: !0,
            this: !0,
            tis: !0,
            to: !0,
            too: !0,
            twas: !0,
            us: !0,
            wants: !0,
            was: !0,
            we: !0,
            were: !0,
            what: !0,
            when: !0,
            where: !0,
            which: !0,
            while: !0,
            who: !0,
            whom: !0,
            why: !0,
            will: !0,
            with: !0,
            would: !0,
            yet: !0,
            you: !0,
            your: !0
        }, d.Pipeline.registerFunction(d.stopWordFilter, "stopWordFilter"), d.Pipeline.registerFunction(d.trimmer = function (e) {
            if (null == e) throw new Error("token should not be undefined");
            return e.replace(/^\W+/, "").replace(/\W+$/, "")
        }, "trimmer"), (d.InvertedIndex = function () {
            this.root = {
                docs: {},
                df: 0
            }
        }).load = function (e) {
            var t = new this;
            return t.root = e.root, t
        }, d.InvertedIndex.prototype.addToken = function (e, t, o) {
            for (var o = o || this.root, n = 0; n <= e.length - 1;) {
                var r = e[n];
                r in o || (o[r] = {
                    docs: {},
                    df: 0
                }), n += 1, o = o[r]
            }
            var i = t.ref;
            o.docs[i] ? o.docs[i] = {
                tf: t.tf
            } : (o.docs[i] = {
                tf: t.tf
            }, o.df += 1)
        }, d.InvertedIndex.prototype.hasToken = function (e) {
            if (!e) return !1;
            for (var t = this.root, o = 0; o < e.length; o++) {
                if (!t[e[o]]) return !1;
                t = t[e[o]]
            }
            return !0
        }, d.InvertedIndex.prototype.getNode = function (e) {
            if (!e) return null;
            for (var t = this.root, o = 0; o < e.length; o++) {
                if (!t[e[o]]) return null;
                t = t[e[o]]
            }
            return t
        }, d.InvertedIndex.prototype.getDocs = function (e) {
            e = this.getNode(e);
            return null == e ? {} : e.docs
        }, d.InvertedIndex.prototype.getTermFrequency = function (e, t) {
            e = this.getNode(e);
            return null != e && t in e.docs ? e.docs[t].tf : 0
        }, d.InvertedIndex.prototype.getDocFreq = function (e) {
            e = this.getNode(e);
            return null == e ? 0 : e.df
        }, d.InvertedIndex.prototype.removeToken = function (e, t) {
            !e || null != (e = this.getNode(e)) && t in e.docs && (delete e.docs[t], --e.df)
        }, d.InvertedIndex.prototype.expandToken = function (e, t, o) {
            if (null == e || "" == e) return [];
            var n, t = t || [];
            if (null == o && null == (o = this.getNode(e))) return t;
            for (n in 0 < o.df && t.push(e), o) "docs" !== n && "df" !== n && this.expandToken(e + n, t, o[n]);
            return t
        }, d.InvertedIndex.prototype.toJSON = function () {
            return {
                root: this.root
            }
        }, (d.Configuration = function (e, t) {
            var o, e = e || "";
            if (null == t) throw new Error("fields should not be null");
            this.config = {};
            try {
                o = JSON.parse(e), this.buildUserConfig(o, t)
            } catch (e) {
                d.utils.warn("user configuration parse failed, will use default configuration"), this.buildDefaultConfig(t)
            }
        }).prototype.buildDefaultConfig = function (e) {
            this.reset(), e.forEach(function (e) {
                this.config[e] = {
                    boost: 1,
                    bool: "OR",
                    expand: !1
                }
            }, this)
        }, d.Configuration.prototype.buildUserConfig = function (e, t) {
            var o, n, r = "OR",
                i = !1;
            if (this.reset(), "bool" in e && (r = e.bool || r), "expand" in e && (i = e.expand || i), "fields" in e)
                for (var s in e.fields) - 1 < t.indexOf(s) ? (n = i, null != (o = e.fields[s]).expand && (n = o.expand), this.config[s] = {
                    boost: o.boost || 0 === o.boost ? o.boost : 1,
                    bool: o.bool || r,
                    expand: n
                }) : d.utils.warn("field name in user configuration not found in index instance fields");
            else this.addAllFields2UserConfig(r, i, t)
        }, d.Configuration.prototype.addAllFields2UserConfig = function (t, o, e) {
            e.forEach(function (e) {
                this.config[e] = {
                    boost: 1,
                    bool: t,
                    expand: o
                }
            }, this)
        }, d.Configuration.prototype.get = function () {
            return this.config
        }, d.Configuration.prototype.reset = function () {
            this.config = {}
        }, lunr.SortedSet = function () {
            this.length = 0, this.elements = []
        }, lunr.SortedSet.load = function (e) {
            var t = new this;
            return t.elements = e, t.length = e.length, t
        }, lunr.SortedSet.prototype.add = function () {
            for (var e, t = 0; t < arguments.length; t++) ~this.indexOf(e = arguments[t]) || this.elements.splice(this.locationFor(e), 0, e);
            this.length = this.elements.length
        }, lunr.SortedSet.prototype.toArray = function () {
            return this.elements.slice()
        }, lunr.SortedSet.prototype.map = function (e, t) {
            return this.elements.map(e, t)
        }, lunr.SortedSet.prototype.forEach = function (e, t) {
            return this.elements.forEach(e, t)
        }, lunr.SortedSet.prototype.indexOf = function (e) {
            for (var t = 0, o = this.elements.length, n = o - t, r = t + Math.floor(n / 2), i = this.elements[r]; 1 < n;) {
                if (i === e) return r;
                n = (o = e < i ? r : o) - (t = i < e ? r : t), r = t + Math.floor(n / 2), i = this.elements[r]
            }
            return i === e ? r : -1
        }, lunr.SortedSet.prototype.locationFor = function (e) {
            for (var t = 0, o = this.elements.length, n = o - t, r = t + Math.floor(n / 2), i = this.elements[r]; 1 < n;) n = (o = e < i ? r : o) - (t = i < e ? r : t), r = t + Math.floor(n / 2), i = this.elements[r];
            return e < i ? r : i < e ? r + 1 : void 0
        }, lunr.SortedSet.prototype.intersect = function (e) {
            for (var t = new lunr.SortedSet, o = 0, n = 0, r = this.length, i = e.length, s = this.elements, a = e.elements;;) {
                if (r - 1 < o || i - 1 < n) break;
                s[o] !== a[n] ? s[o] < a[n] ? o++ : s[o] > a[n] && n++ : (t.add(s[o]), o++, n++)
            }
            return t
        }, lunr.SortedSet.prototype.clone = function () {
            var e = new lunr.SortedSet;
            return e.elements = this.toArray(), e.length = e.elements.length, e
        }, lunr.SortedSet.prototype.union = function (e) {
            for (var t, e = this.length >= e.length ? (t = this, e) : (t = e, this), o = t.clone(), n = 0, r = e.toArray(); n < r.length; n++) o.add(r[n]);
            return o
        }, lunr.SortedSet.prototype.toJSON = function () {
            return this.toArray()
        }, e = this, o = function () {
            return d
        }, "function" == typeof define && define.amd ? define(o) : "object" == typeof exports ? module.exports = d : e.elasticlunr = d
    }();
const _luminanceList = [8e-4, .001, .0011, .0013, .0015, .0017, .002, .0022, .0025, .0027, .003, .0033, .0037, .004, .0044, .0048, .0052, .0056, .006, .0065, .007, .0075, .008, .0086, .0091, .0097, .0103, .011, .0116, .0123, .013, .0137, .0144, .0152, .016, .0168, .0176, .0185, .0194, .0203, .0212, .0222, .0232, .0242, .0252, .0262, .0273, .0284, .0296, .0307, .0319, .0331, .0343, .0356, .0369, .0382, .0395, .0409, .0423, .0437, .0452, .0467, .0482, .0497, .0513, .0529, .0545, .0561, .0578, .0595, .0612, .063, .0648, .0666, .0685, .0704, .0723, .0742, .0762, .0782, .0802, .0823, .0844, .0865, .0887, .0908, .0931, .0953, .0976, .0999, .1022, .1046, .107, .1095, .1119, .1144, .117, .1195, .1221, .1248, .1274, .1301, .1329, .1356, .1384, .1413, .1441, .147, .15, .1529, .1559, .159, .162, .1651, .1683, .1714, .1746, .1779, .1812, .1845, .1878, .1912, .1946, .1981, .2016, .2051, .2086, .2122, .2159, .2195, .2232, .227, .2307, .2346, .2384, .2423, .2462, .2502, .2542, .2582, .2623, .2664, .2705, .2747, .2789, .2831, .2874, .2918, .2961, .3005, .305, .3095, .314, .3185, .3231, .3278, .3325, .3372, .3419, .3467, .3515, .3564, .3613, .3663, .3712, .3763, .3813, .3864, .3916, .3968, .402, .4072, .4125, .4179, .4233, .4287, .4342, .4397, .4452, .4508, .4564, .4621, .4678, .4735, .4793, .4851, .491, .4969, .5029, .5089, .5149, .521, .5271, .5333, .5395, .5457, .552, .5583, .5647, .5711, .5776, .5841, .5906, .5972, .6038, .6105, .6172, .624, .6308, .6376, .6445, .6514, .6584, .6654, .6724, .6795, .6867, .6939, .7011, .7084, .7157, .7231, .7305, .7379, .7454, .7529, .7605, .7682, .7758, .7835, .7913, .7991, .807, .8148, .8228, .8308, .8388, .8469, .855, .8632, .8714, .8796, .8879, .8963, .9047, .9131, .9216, .9301, .9387, .9473, .956, .9647, .9734, .9823, .9911, 1];

function luminance(e) {
    let t = {
        r: red(e),
        g: green(e),
        b: blue(e)
    };
    for (var [o, n] of Object.entries(t)) n = n / 255 < .03928 ? n / 255 / 12.92 : _luminanceList[n], t[o] = n;
    return +(.2126 * t.r + .7152 * t.g + .0722 * t.b).toFixed(8)
}

function contrastRatio(e, t) {
    t.colorContrastLight = t.colorContrastLight || "#ffffff", t.foreground = t.foreground || t.colorContrastLight;
    e = luminance(e), t = luminance(t.foreground);
    return t < e ? +((e + .05) / (t + .05)).toFixed(10) : +((t + .05) / (e + .05)).toFixed(10)
}

function colorContrast(e, t) {
    (t = t || {}).colorContrastDark = t.colorContrastDark || "#000000", t.colorContrastLight = t.colorContrastLight || "#ffffff", t.minContrastRatio = t.minContrastRatio || 4.5;
    let o = 0,
        n = null;
    for (const i of [t.colorContrastLight, t.colorContrastDark, "#ffffff", "#000000"]) {
        var r = contrastRatio(e, {
            foreground: i,
            colorContrastLight: t.colorContrastLight,
            colorContrastDark: t.colorContrastDark
        });
        if (r > t.minContrastRatio) return i;
        r > o && (o = r, n = i)
    }
    return console.log(`Found no color leading to ${t.minContrastRatio}:1 contrast ratio against ${e}...`), n
}

function search() {
    "use strict";
    var t, n, r, e, o, i;

    function s(e) {
        e.posts.forEach(function (e) {
            i.addDoc(e)
        }), localStorage.setItem("spin_search_index", JSON.stringify(i)), localStorage.setItem("spin_search_last", e.posts[0].updated_at)
    }
    "undefined" != typeof gh_search_key && "" !== gh_search_key && "undefined" != typeof gh_search_migration && (t = gtu(".search-field"), n = gtu(".search-button"), r = gtu(".search-result"), e = siteUrl + "/ghost/api/v3/content/posts/?key=" + gh_search_key + "&limit=all&fields=id,title,excerpt,url,updated_at,visibility&order=updated_at%20desc&formats=plaintext", o = JSON.parse(localStorage.getItem("spin_search_index")), elasticlunr.clearStopWords(), localStorage.removeItem("spin_index"), localStorage.removeItem("spin_last"), o && gh_search_migration === localStorage.getItem("spin_search_migration") ? (i = elasticlunr.Index.load(o), fetch(e + "&filter=updated_at:>'" + localStorage.getItem("spin_search_last").replace(/\..*/, "").replace(/T/, " ") + "'").then(function (e) {
        0 < e.posts.length && s(e)
    })) : fetch(e).then(function (e) {
        0 < e.posts.length && (i = elasticlunr(function () {
            this.addField("title"), this.addField("plaintext"), this.setRef("id")
        }), s(e), localStorage.setItem("spin_search_migration", gh_search_migration))
    }), t.on("keyup", function (e) {
        var t = i.search(e.target.value, {
                expand: !0
            }),
            o = "";
        t.forEach(function (e) {
            o += '<div class="search-result-row"><a class="search-result-row-link" href="' + e.doc.url + '"><div class="search-result-row-title">' + e.doc.title + '</div><div class="search-result-row-excerpt">' + e.doc.excerpt + "</div></a></div>"
        }), r.html(o), 0 < e.target.value.length ? n.addClass("search-button-clear") : n.removeClass("search-button-clear")
    }), gtu(".search-form").on("submit", function (e) {
        e.preventDefault()
    }), n.on("click", function (e) {
        e.target.classList.contains("search-button-clear") && t.val("").focus().keyup()
    }), document.addEventListener("keyup", function (e) {
        27 === e.keyCode && t.val("").focus().keyup()
    }))
}

function addStyleElement(e) {
    var t = document.createElement("style");
    t.styleSheet ? t.styleSheet.cssText = e : t.appendChild(document.createTextNode(e)), document.getElementsByTagName("head")[0].appendChild(t)
}

function squashCss(e) {
    return e.trim().replace(/\s+/g, " ")
}

function gradientBackground(e, t) {
    t.enableGradients = t.enableGradients || !1;
    let o = `
    background-color: ${e};
    `;
    return t.enableGradients && (o += `
        background-image: var(--bs-gradient);
        `), o
}

function btnBoxShadow(e) {
    return (e = e || {}).enableShadows = e.enableShadows || !1, e.btnBoxShadow = e.btnBoxShadow || "inset 0 1px 0 #ffffff, 0 1px 1px #000000", e.enableShadows ? `box-shadow: ${e.btnBoxShadow}` : ""
}

function focusBoxShadow(e, t, o, n) {
    return (n = n || {}).btnFocusWidth = n.btnFocusWidth || ".25rem", n.enableShadows ? `box-shadow: ${e}  0 0 0 ${n.btnFocusWidth} ${rgba(mix(t,o,15),.5)}` : `box-shadow: 0 0 0 ${n.btnFocusWidth}  ${rgba(mix(t,o,15),.5)}`
}

function removeGradientIfEnabled(e) {
    return (e = e || {}).enableGradients ? "background-image: none;" : ""
}

function buttonVariant(e, t, o, n) {
    "." !== e.charAt(0) && (e = "." + e), (n = n || {}).colorContrastLight = n.colorContrastLight || "#ffffff", n.colorContrastDark = n.colorContrastDark || "#000000", n.minContrastRatio = n.minContrastRatio || 4.5, n.btnHoverBgShadeAmount = n.btnHoverBgShadeAmount || 15, n.btnHoverBgTintAmount = n.btnHoverBgTintAmount || 15, n.btnHoverBorderShadeAmount = n.btnHoverBorderShadeAmount || 20, n.btnHoverBorderTintAmount = n.btnHoverBorderTintAmount || 10, n.btnActiveBgShadeAmount = n.btnHoverBgShadeAmount || 20, n.btnActiveBgTintAmount = n.btnActiveBgTintAmount || 20, n.btnActiveBorderShadeAmount = n.btnActiveBorderShadeAmount || 25, n.btnActiveBorderTintAmount = n.btnActiveBorderTintAmount || 10, n.btnActiveBoxShadow = n.btnActiveBoxShadow || `inset 0 3px 5px ${rgba("#000000",.125)}`, n.enableGradients = n.enableGradients || !1, n.enableShadows = n.enableShadows || !1, n.color = n.color || colorContrast(t, n), n.hoverBackground || (n.color === n.colorContrastLight ? n.hoverBackground = shade(t, n.btnHoverBgShadeAmount) : n.hoverBackground = tint(t, n.btnHoverBgTintAmount)), n.hoverBorder || (n.color === n.colorContrastLight ? n.hoverBorder = shade(o, n.btnHoverBorderShadeAmount) : n.hoverBorder = tint(o, n.btnHoverBgTintAmount)), n.hoverColor = n.hoverColor || colorContrast(n.hoverBackground, n), n.activeBackground || (n.color === n.colorContrastLight ? n.activeBackground = shade(t, n.btnActiveBgShadeAmount) : n.activeBackground = tint(t, n.btnActiveBorderTintAmount)), n.activeBorder || (n.color === n.colorContrastLight ? n.activeBorder = shade(o, n.btnActiveBorderShadeAmount) : n.activeBorder = tint(o, n.btnActiveBorderTintAmount)), n.activeColor = n.activeColor || colorContrast(n.activeBackground, n), n.disabledBackground = t, n.disabledBorder = o, n.disabledColor = colorContrast(n.disabledBackground), addStyleElement(squashCss(`
    ${e} {
        color: ${n.color};
        ${gradientBackground(t,n)}
        border-color: ${o};
        ${btnBoxShadow(n)}
    }
    
    ${e}:hover {
        color: ${n.hoverColor};
        ${gradientBackground(n.hoverBackground,n)};
        border-color: ${n.hoverBorder};
    }

    .btn-check:focus + ${e},
    ${e}:focus {
        color: ${n.hoverColor};
        ${gradientBackground(n.hoverBackground,n)};
        border-color: ${n.hoverBorder};
        ${focusBoxShadow(n.btnBoxShadow,n.color,o,n)};
    }

    .btn-check:checked + ${e},
    .btn-check:active + ${e},
    ${e}:active,
    ${e}.active,
    .show > ${e}.dropdown-toggle {
        color: ${n.activeColor};
        background-color: ${n.activeBackground};
        ${removeGradientIfEnabled(n)}
        border-color: ${n.activeBorder};
    }

    ${e}:focus {
        ${focusBoxShadow(n.activeBoxShadow,n.color,o,n)};
    }

    ${e}:disabled,
    ${e}.disabled {
        color: ${n.disabledColor};
        background-color: ${n.disabledBackground};
        ${removeGradientIfEnabled(n)}
        border-color: ${n.disabledBorder};
    }`))
}

function buttons() {
    var e = getComputedStyle(document.querySelector(":root")).getPropertyValue("--ghost-accent-color");
    buttonVariant(".btn-accent", e, e, {
        color: "#ffffff",
        hoverColor: "#ffffff"
    })
}

function forms() {
    var e = document.querySelectorAll('form[data-form-type="contact"]');
    if (0 < e.length)
        for (var t = 0; t < e.length; t++) {
            var o, n = e[t];
            n.querySelector('input[name="api_key"]') || ((o = document.createElement("input")).setAttribute("hidden", "true"), o.setAttribute("name", "api_key"), o.setAttribute("value", "API_KEY"), n.appendChild(o)), n.querySelector('input[name="location"]') || ((o = document.createElement("input")).setAttribute("hidden", "true"), o.setAttribute("name", "location"), o.setAttribute("value", "./#thank-you"), n.appendChild(o)), n.setAttribute("method", "POST"), n.setAttribute("action", "https://api.mindspun.com/form")
        }
}
gtu.ready(function () {
    "use strict";
    search(), buttons(), forms()
});
//# sourceMappingURL=main.min.js.map